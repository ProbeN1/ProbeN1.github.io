<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linux on 茄子的养殖场</title>
        <link>https://proben1.github.io/categories/linux/</link>
        <description>Recent content in Linux on 茄子的养殖场</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 27 Jul 2024 16:21:01 +0800</lastBuildDate><atom:link href="https://proben1.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Ssh免密</title>
        <link>https://proben1.github.io/2024/ssh%E5%85%8D%E5%AF%86/</link>
        <pubDate>Sat, 27 Jul 2024 16:21:01 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/ssh%E5%85%8D%E5%AF%86/</guid>
        <description>&lt;h3 id=&#34;免密配置&#34;&gt;免密配置
&lt;/h3&gt;&lt;p&gt;如果将输入密码登录比作拿钥匙开门，那么免密登录可以理解为刷脸或者刷指纹开门，要在此之前已经在开门的数据库中录下来。在录下来之后才体会到开门不用钥匙便捷。&lt;/p&gt;
&lt;p&gt;所以，免密登录的前提就是远端的服务器能够认识你的机器，而你的机器“刷脸”（免密）进门就需要把它的“脸”（公钥）放到远端的服务器的可信列表里。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66ec23a3f21886ccc001e8f7.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66ec23a3f21886ccc001e8f7.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;步骤&#34;&gt;步骤
&lt;/h4&gt;&lt;p&gt;ssh免密，A用户要免密登录B用户，在A用户ssh-keygen生成公钥和私钥，把公钥加入到B用户目录下.ssh/authorized_keys里&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66ec2680f21886ccc005072d.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66ec2680f21886ccc005072d.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;1、生成公私钥&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-keygen -t rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据提示三次默认回车，就会在 $HOME/.ssh 目录下，会新生成两个文件 &lt;code&gt;id_rsa&lt;/code&gt; 和 &lt;code&gt;id_rsa.pub&lt;/code&gt; 。其中 &lt;code&gt;id_rsa&lt;/code&gt; 是私钥，而 &lt;code&gt;id_rsa.pub&lt;/code&gt; 是公钥。由于要设置多个 ssh key ，因此在&lt;code&gt;第一个提示&lt;/code&gt;所要保存的路径时，可以将密钥名字改为 &lt;code&gt;xxx_rsa&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;2、将本地的公钥上传至远程服务器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub  user@10.11.xx.xx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过 &lt;code&gt;scp&lt;/code&gt; 将 &lt;code&gt;xxx_rsa.pub&lt;/code&gt; 上传到远程主机 &lt;code&gt;$HOME/.ssh&lt;/code&gt; 目录下也行（如果没有，则新建一个）&lt;/p&gt;
&lt;p&gt;3、尝试免密登录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh user@10.11.xx.xx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;权限需要&#34;&gt;权限需要
&lt;/h4&gt;&lt;p&gt;SSH对公钥、私钥的权限和所有权的要求是非常严格的，总结如下：
1、下面两个目录的所有权必须是user-B，所属组也应该是user-B，前者权限不能是777，后者权限必须为700
/home/user
/home/user/.ssh
2、下面公钥文件的所有权必须是user-B，所属组也应该是user-B，权限必须为644
/home/user/.ssh/authorized_keys
3、下面私钥文件的所有权必须是user-A，所属组也应该是user-A，权限必须是600
/home/user/.ssh/id_rsa&lt;/p&gt;
&lt;p&gt;4、vi /etc/ssh/sshd_config&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;//开启以下内容,一般默认即可
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HostKey /etc/ssh/ssh_host_rsa_key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RSAAuthentication yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PubkeyAuthentication yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AuthorizedKeysFile .ssh/authorized_keys
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;记得去systemctl restart sshd&lt;/p&gt;
&lt;h4 id=&#34;别名多个key&#34;&gt;别名/多个key
&lt;/h4&gt;&lt;p&gt;要登录不同的远程主机时，每个帐号参数配置可能不同，比如端口设置不同，这时候敲命令就很劳神费力了。SSH 提供了配置文件用来管理用户的 SSH 会话，该机制可以大大的方便用户登录。&lt;/p&gt;
&lt;p&gt;SSH 的配置文件有两个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ ~/.ssh/config # 用户配置文件
$ /etc/ssh/ssh_config # 系统配置文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 &lt;code&gt;~/.ssh/&lt;/code&gt; 新建 config 文件，其配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host cn_server                      # 关键词、别名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HostName 10.11.xx.xx           # 主机地址
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Port 22                   # 指定端口
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    User root                   # 用户名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    IdentityFile ~/.ssh/xxx_rsa # 认证文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    StrictHostKeyChecking no    # 关闭提示
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# ssh别名链接验证
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh cn_server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若要设置多个 ssh key ，只需要在 config 文件中添加多个 HOST 即可。 在 &lt;code&gt;.ssh/&lt;/code&gt; 目录下，还有一个文件是 &lt;code&gt;known_hosts&lt;/code&gt; ，该文件是已知的主机公钥名单。 在第一次连接远程主机时，OpenSSH 会提示： &lt;code&gt;无法辨认主机的真实性，询问是否要继续连接&lt;/code&gt; 。手动输入 yes 之后 ssh 就会将远程主机地址及对应的公钥添加进 known_hosts 文件。下一次连接同一台远程主机时，OpenSSH 通过 known_hosts 文件识别出它的公钥已经保存在本地了，从而跳过提示。 将 &lt;code&gt;StrictHostKeyChecking&lt;/code&gt; 设置成 no 后，在第一次连接时，ssh 将会自动添加远程主机的相关信息，省略了手动敲 yes 的步骤。 最后在终端执行命令 &lt;code&gt;ssh alias&lt;/code&gt; 就可以了。&lt;/p&gt;
&lt;h3 id=&#34;sshpass&#34;&gt;sshpass
&lt;/h3&gt;&lt;p&gt;sshpass 是&lt;strong&gt;一个简单、轻量级的命令行工具&lt;/strong&gt;，通过它我们能够向命令提示符本身提供密码（非交互式密码验证），这样就可以通过cron 调度器执行自动化的shell 脚本进行备份。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshpass -p {密码} ssh {用户名}@{主机IP}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>ssh和sftp的使用</title>
        <link>https://proben1.github.io/2024/ssh%E5%92%8Csftp%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Sat, 27 Jul 2024 15:58:11 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/ssh%E5%92%8Csftp%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;p&gt;日常中，经常会用到ssh，以及它的好兄弟sftp，或者它的同分异构体scp，还有同素异形体sshpass等等，原理很简单，命令比较绕，所以这里梳理一下。&lt;/p&gt;
&lt;h3 id=&#34;ssh&#34;&gt;SSH
&lt;/h3&gt;&lt;p&gt;SSH (Secure Shell) 是一种用于远程登录和其他网络服务之间的加密协议，&lt;strong&gt;ssh&lt;/strong&gt; 命令用于通过 SSH 协议连接到远程主机，实现远程登录和执行命令，它加密会话中的所有通信，确保数据传输的安全性。&lt;/p&gt;
&lt;p&gt;默认&lt;strong&gt;TCP Port 22&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh [options] [user]@[hostname] [command]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指定端口连接：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -p 2222 user@hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sftp&#34;&gt;SFTP
&lt;/h3&gt;&lt;p&gt;SFTP（Secure File Transfer Protocol，安全文件传输协议）是一种基于可靠数据流（data stream），提供文件存取和管理的网络传输协议，与 FTP 协议相比，SFTP 在客户端与服务器间提供了一种更为安全的文件传输方式。&lt;/p&gt;
&lt;p&gt;SFTP 是基于 SSH 协议的，所以也是默认&lt;strong&gt;TCP Port 22&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sftp [options] [user]@[hostname]:[remote_folder]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指定端口连接：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -P 2222 user@hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SFTP 解释器中预置了常用的命令，但是没有自带的 Bash 来得丰富。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本指令&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;-ls-rm-cd-mkdir-pwd---等指令是对当前连接的远程端服务器的操作&#34;&gt;① ls, rm, cd, mkdir, pwd   等指令是对当前连接的远程端服务器的操作。
&lt;/h5&gt;&lt;h5 id=&#34;-lls-lrm-lcd-lmkdir-lpwd-等指令是对本地端服务器的操作--在上述指令前加llocal即可&#34;&gt;② lls, lrm, lcd, lmkdir, lpwd 等指令是对本地端服务器的操作 —— 在上述指令前加l(local)即可
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;put 本地路径 远程路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把&lt;strong&gt;本地端&lt;/strong&gt;的文件上传到&lt;strong&gt;远程端&lt;/strong&gt;的目录下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get 本地路径 远程路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把&lt;strong&gt;远程端&lt;/strong&gt;的文件下载到&lt;strong&gt;本地端&lt;/strong&gt;的目录下&lt;/p&gt;
&lt;h5 id=&#34;如果上传下载的是文件夹-在putget命令后加上-r参数即可&#34;&gt;&lt;strong&gt;如果上传/下载的是文件夹, 在put/get命令后加上-r参数即可。&lt;/strong&gt;
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;!command&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在本地端上执行command这个命令，比较方便&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;退出sftp&lt;/p&gt;
&lt;h3 id=&#34;scp&#34;&gt;SCP
&lt;/h3&gt;&lt;p&gt;scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。&lt;/p&gt;
&lt;p&gt;默认&lt;strong&gt;TCP Port 22&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对目录操作在scp后面加 -r&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;1从本地复制到远程&#34;&gt;1、从本地复制到远程
&lt;/h4&gt;&lt;p&gt;命令格式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp [本地文件] [user]@[hostname]:[remote_folder] 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;或者 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp [本地文件] [user]@[hostname]:[remote_file]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2从远程复制到本地&#34;&gt;2、从远程复制到本地
&lt;/h4&gt;&lt;p&gt;从远程复制到本地，只要反过来即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp  [user]@[hostname]:[remote_folder] [本地文件]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;或者 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp  [user]@[hostname]:[remote_file] [本地文件]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>NTP服务</title>
        <link>https://proben1.github.io/2024/ntp%E6%9C%8D%E5%8A%A1/</link>
        <pubDate>Fri, 28 Jun 2024 10:53:01 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/ntp%E6%9C%8D%E5%8A%A1/</guid>
        <description>&lt;p&gt;网络时间协议NTP（Network Time Protocol）&lt;strong&gt;是TCP/IP协议族里面的一个应用层协议，用来使客户端和服务器之间进行时钟同步，提供高精准度的时间校正&lt;/strong&gt;。 NTP服务器从权威时钟源（例如原子钟、GPS）接收精确的协调世界时UTC，客户端再从服务器请求和接收时间。&lt;/p&gt;
&lt;p&gt;在以前，ntp服务使用ntpd（“d” stands for “Daemon”），现在使用chronyd，它使用连续修正（通过减慢时钟或者加快时钟的方式连续的修正）而非直接调整时间，不会出现间断，并且比ntpd更加精准。&lt;/p&gt;
&lt;p&gt;对于机房内的机器，可以采用二级时间校正，即配置一台连接权威时钟源chronyd服务器后，通过这台服务器像其他客户端提供chronyd服务。&lt;/p&gt;
&lt;p&gt;配置命令如下，首先确保ntpd的关闭，systemctl is-enabled ntpd&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &amp;#39;server 10.xxx.xxx.xxx iburst&amp;#39; &amp;gt;&amp;gt; /etc/chrony.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart chronyd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以通过多种方式查看chronyd服务的开启或者状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;system status chronyd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chronyc tracking
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timedatectl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chronyc sourcestats
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Linux变量</title>
        <link>https://proben1.github.io/2024/linux%E5%8F%98%E9%87%8F/</link>
        <pubDate>Tue, 21 May 2024 15:50:07 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E5%8F%98%E9%87%8F/</guid>
        <description>&lt;p&gt;每一种编程语言中，我们都会碰到变量的作用域的问题。Linux 是一个多用户的操作系统。多用户意味着每个用户登录系统后，都有自己专用的运行环境。而这个环境是由一组变量所定义, 这组变量被称为环境变量。用户可以对自己的环境变量进行修改以达到对环境的要求。&lt;/p&gt;
&lt;p&gt;本地vs环境&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;本地变量只对当前&lt;span style=&#34;color:#268bd2&#34;&gt;shell生效&lt;/span&gt;，用“变量名=变量值”设定
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;环境变量对子进程也生效，用&lt;span style=&#34;color:#268bd2&#34;&gt;export设定&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用户vs系统&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;系统级变量对所有用户生效
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;用户级变量只对当前用户生效
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;暂时vs永久&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;如果要设定永久的变量，需要写入相应文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;否则就是暂时的，下次登录不生效
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;对所有用户生效的永久性变量&#34;&gt;对所有用户生效的永久性变量
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这类变量对系统内的所有用户都生效，所有用户都可以使用这类变量。作用范围是整个系统，只在 root 下才能修改。&lt;/p&gt;
&lt;p&gt;修改后使用source命令进行生效&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source /etc/profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;对单一用户生效的永久性变量&#34;&gt;对单一用户生效的永久性变量
&lt;/h3&gt;&lt;p&gt;在用户目录下的.bash_profile 文件中添加变量，该文件是隐藏文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;若bash是以login方式执行时，读取~/.bash_profile，若它不存在，则读取~/.bash_login，若前两者不存在，读取~/.profile。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;当bash是以non-login形式执行时,读取~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;临时有效的环境变量&#34;&gt;临时有效的环境变量
&lt;/h3&gt;&lt;p&gt;此类环境变量只对当前的 shell 有效。当我们退出登录或者关闭终端再重新打开时，这个环境变量就会消失。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;export&lt;/span&gt; 变量名=变量值 &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#设置新的环境变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;变量名=变量值 &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#设置或更新本地变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;echo&lt;/span&gt; $变量名 &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#打印&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;unset&lt;/span&gt; 变量名 &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;readonly&lt;/span&gt; 变量名 &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#设置只读&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;env&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#显示当前用户的变量；&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#显示当前 shell 变量(shell 变量包含用户变量)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;生效顺序&#34;&gt;生效顺序
&lt;/h3&gt;&lt;p&gt;bash会在用户登录时，读取下列四个环境配置文件：&lt;/p&gt;
&lt;p&gt;全局环境变量设置文件：/etc/profile、/etc/bashrc。
用户环境变量设置文件：~/.bash_profile、~/.bashrc。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;读取顺序：① /etc/profile、② ~/.bash_profile、③ ~/.bashrc、④ /etc/bashrc。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;① /etc/profile：此文件为系统的每个用户设置环境信息，系统中每个用户登录时都要执行这个脚本，如果系统管理员希望某个设置对所有用户都生效，可以写在这个脚本里，该文件也会从/etc/profile.d目录中的配置文件中搜集shell的设置。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;② ~/.bash_profile：每个用户都可使用该文件设置专用于自己的shell信息，当用户登录时，该文件仅执行一次。默认情况下，他设置一些环境变量，执行用户的.bashrc文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;③ ~/.bashrc：该文件包含专用于自己的shell信息，当登录时以及每次打开新shell时，该文件被读取。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;④ /etc/bashrc：为每一个运行bash shell的用户执行此文件，当bash shell被打开时，该文件被读取。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;常见的环境变量&#34;&gt;常见的环境变量
&lt;/h3&gt;&lt;p&gt;BASH Bash Shell的全路径
CDPATH 用于快速进入某个目录。
&lt;strong&gt;PATH 决定了shell将到哪些目录中寻找命令或程序&lt;/strong&gt;
HOME 当前用户主目录
HISTSIZE 历史记录数
LOGNAME 当前用户的登录名
HOSTNAME 指主机的名称
SHELL 当前用户Shell类型
LANGUGE 语言相关的环境变量，多语言可以修改此环境变量
MAIL 当前用户的邮件存放目录
PS1 基本提示符，对于root用户是#，对于普通用户是$&lt;/p&gt;
&lt;h3 id=&#34;su和sudo&#34;&gt;su和sudo
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su - user #切换用户user且切换环境变量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su user #切换用户user，不切换环境变量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo user #使用user权限运行单个命令
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;su命令会启动一个新shell，环境变量和加不加“-”有关，执行时需要输入新用户的密码&lt;/p&gt;
&lt;p&gt;sudo是以新用户的权限运行某个命令，这个能运行的范围由root用户规定，输入的是现在用户的密码&lt;/p&gt;
</description>
        </item>
        <item>
        <title>本地yum源配置</title>
        <link>https://proben1.github.io/2024/%E6%9C%AC%E5%9C%B0yum%E6%BA%90%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Tue, 21 May 2024 15:37:14 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/%E6%9C%AC%E5%9C%B0yum%E6%BA%90%E9%85%8D%E7%BD%AE/</guid>
        <description>&lt;p&gt;Linux本地yum源配置，以Oracle Linux 8.6为例&lt;/p&gt;
&lt;h3 id=&#34;创建系统镜像上传目录&#34;&gt;创建系统镜像上传目录
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /soft/os_iso
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;想个办法传上镜像文件&lt;/p&gt;
&lt;h3 id=&#34;备份默认资源库&#34;&gt;备份默认资源库
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /etc/yum.repos.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /etc/yum.repos.d/backup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;配置yum源&#34;&gt;配置yum源
&lt;/h3&gt;&lt;p&gt;在/etc/yum.repos.d/下创建一个local.repo文件&lt;/p&gt;
&lt;p&gt;vi /etc/yum.repos.d/local.repo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[OL8_BaseOS]  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name=Oracle Linux 8 x86_64 BaseOS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseurl=file:///mnt/BaseOS/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpgcheck=0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enabled=1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[OL8_AppStream]     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name=Oracle Linux 8 x86_64 AppStream
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseurl=file:///mnt/AppStream/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gpgcheck=0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enabled=1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;挂载iso镜像&#34;&gt;挂载iso镜像
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /soft/os_iso
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount -o loop OracleLinux-R8-U6-x86_64-dvd-8.6.iso /mnt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;更新元数据缓存&#34;&gt;更新元数据缓存
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 清除缓存，如果是第一次配置可以不输入
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum clean all 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf repolist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf makecache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;检测和查看&#34;&gt;检测和查看
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#检查是否成功
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnf list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#查看当前yum源
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum repolist all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Linux重定向和crone</title>
        <link>https://proben1.github.io/2024/linux%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8Ccrone/</link>
        <pubDate>Sat, 11 May 2024 15:27:12 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8Ccrone/</guid>
        <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;符号&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;标准输出重定向&lt;/td&gt;
&lt;td&gt;命令 &amp;gt; 文件&lt;/td&gt;
&lt;td&gt;以覆盖的方式，把命令的正确输出输出到指定的文件或设备中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;命令 &amp;raquo; 文件&lt;/td&gt;
&lt;td&gt;以追加的方式，把命令的正确输出输出到指定的文件或设备中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标准错误输出重定向&lt;/td&gt;
&lt;td&gt;错误命令 2&amp;gt; 文件&lt;/td&gt;
&lt;td&gt;以覆盖的方式，把命令的错误输出输出到指定的文件或设备中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;错误命令 2&amp;raquo; 文件&lt;/td&gt;
&lt;td&gt;以追加的方式，把命令的错误输出输出到指定的文件或设备中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;正确输出和错误输出同时保存&lt;/td&gt;
&lt;td&gt;命令 &amp;gt; 文件 2&amp;gt;&amp;amp;1&lt;/td&gt;
&lt;td&gt;以覆盖的方式，把正确输出和错误输出都保存到同一个文件当中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;命令 &amp;raquo; 文件 2&amp;gt;&amp;amp;1&lt;/td&gt;
&lt;td&gt;以追加的方式，把正确输出和错误输出都保存到同一个文件当中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;命令 &amp;amp;&amp;gt;文件&lt;/td&gt;
&lt;td&gt;以覆盖的方式，把正确输出和错误输出都保存到同一个文件当中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;命令 &amp;amp;&amp;raquo;文件&lt;/td&gt;
&lt;td&gt;以追加的方式，把正确输出和错误输出都保存到同一个文件当中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;命令&amp;raquo;文件a 2&amp;raquo;文件b&lt;/td&gt;
&lt;td&gt;把正确的输出追加到文件a中，把错误的输出追加到文件b中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;crone&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    *    *    *    *    *
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    |    |    |    |    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    |    |    |    +---------- month (1 - 12) OR jan,feb,mar,apr ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    |    |    +--------------- day of month (1 - 31)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    |    +-------------------- hour (0 - 23)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    +------------------------- minute (0 - 59)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Linux概念知识 运行、内核和shell</title>
        <link>https://proben1.github.io/2024/linux%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86-%E8%BF%90%E8%A1%8C%E5%86%85%E6%A0%B8%E5%92%8Cshell/</link>
        <pubDate>Sat, 11 May 2024 15:27:07 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86-%E8%BF%90%E8%A1%8C%E5%86%85%E6%A0%B8%E5%92%8Cshell/</guid>
        <description>&lt;h3 id=&#34;启动步骤&#34;&gt;启动步骤
&lt;/h3&gt;&lt;p&gt;一：上电与BIOS启动：&lt;/p&gt;
&lt;p&gt;上电：打开电源，BIOS（Basic Input/Output System）进行开机自检（POST）BIOS启动：初始化内存等设备，按照启动顺序，启动各个设备&lt;/p&gt;
&lt;p&gt;二：加载引导加载程序（Boot Loader）：&lt;/p&gt;
&lt;p&gt;Boot Loader读取配置文件grub.cfg、lilo.conf等，加载并启动Linux内核到内存，并跳转到内核的入口点开始执行。内核会进行一系列的初始化工作，如初始化硬件设备、建立内存空间的映射图等。&lt;/p&gt;
&lt;p&gt;三：执行init进程：&lt;/p&gt;
&lt;p&gt;Linux内核启动完成后，会启动第一个用户空间进程init（PID为1）。
init进程会读取/etc/inittab或/etc/systemd/system/default.target等配置文件，确定系统的运行级别（runlevel）。&lt;/p&gt;
&lt;p&gt;四：启动系统服务和管理器：&lt;/p&gt;
&lt;p&gt;根据运行级别，init进程会启动相应的服务和管理器（如systemd）。
systemd会根据配置文件（如/etc/systemd/system/和/lib/systemd/system/目录下的.service文件）启动相应的服务。&lt;/p&gt;
&lt;h3 id=&#34;uefi和legacy两种启动方式的区别&#34;&gt;UEFI和Legacy两种启动方式的区别
&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;UEFI&lt;/th&gt;
&lt;th&gt;Legacy&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;更快的启动时间&lt;/td&gt;
&lt;td&gt;相比UEFI，它的速度较慢&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认GPT 分区方案&lt;/td&gt;
&lt;td&gt;默认MBR 分区方案&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;以 32 位和 64 位运行&lt;/td&gt;
&lt;td&gt;16位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;允许安全启动,将操作系统（OS）视为应用程序&lt;/td&gt;
&lt;td&gt;它不提供允许加载未经授权的应用程序的安全启动方法，未限制双启动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;uek和rhck内核&#34;&gt;UEK和RHCK内核
&lt;/h3&gt;&lt;p&gt;二者分别是Unbreakable Enterprise Kernel(UEK)以及Red Hat Compatible Kernel(RHCK) ，RHCK使用与Redhat一样的内核的版本，稳定性与兼容性有保证。
UEK的内核是基于更新的主流内核,同时附加了Oralce很多的加强功能。&lt;/p&gt;
&lt;h3 id=&#34;kernel和操作系统硬件驱动&#34;&gt;Kernel和操作系统、硬件、驱动
&lt;/h3&gt;&lt;p&gt;内核操作系统的一个核心组成部分，主要用于管理计算机的硬件资源，如CPU、内存、输入输出等。
操作系统是建立在内核之上的一个软件系统，包括了Kernel、系统服务、工具程序和应用程序等，用户通过系统调用程序申请内核相关功能。
内核与计算机硬件交互，提供了操作系统运行的核心功能，如进程管理、内存管理、设备驱动程序等。
驱动又是内核与硬件沟通的桥梁，用于与特定硬件设备进行通信。&lt;/p&gt;
&lt;h3 id=&#34;kernel和shell&#34;&gt;Kernel和shell
&lt;/h3&gt;&lt;p&gt;Shell是用户与操作系统交互的主要接口，会将用户输入的命令通过系统调用（system call）发送给内核（Kernel）。
内核是操作系统的核心部分，负责管理系统资源、提供进程管理、内存管理、设备驱动等核心功能。
内核在接收到Shell发送的命令后，会执行相应的操作，并将结果返回给Shell。从而实现了用户的需求。&lt;/p&gt;
&lt;h3 id=&#34;用户连接shell变量和进程的关系&#34;&gt;用户连接、shell、变量和进程的关系
&lt;/h3&gt;&lt;p&gt;首先，系统会启动一个shell进程作为用户与操作系统之间的接口。&lt;/p&gt;
&lt;p&gt;其次，shell进程启动后，会加载并设置一系列的环境变量。系统级的环境变量和用户级环境变量。&lt;/p&gt;
&lt;p&gt;每当用户在shell中输入一个命令并回车时，shell会为该命令创建一个新的进程。这个新进程是shell进程的子进程，它继承了shell进程的环境变量。&lt;/p&gt;
&lt;h3 id=&#34;pci连接设备&#34;&gt;PCI连接设备
&lt;/h3&gt;&lt;p&gt;PCI（Peripheral Component Interconnect）是一种计算机总线标准，用于连接计算机主板和其他硬件设备。PCI连接设备指的是那些通过PCI总线与主板相连的设备。如显卡、声卡、网卡、RAID卡等。&lt;/p&gt;
&lt;h3 id=&#34;系统的运行级别&#34;&gt;系统的运行级别
&lt;/h3&gt;&lt;p&gt;运行级别0：系统停机
运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆
运行级别2：多用户状态(没有NFS)
运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式
运行级别4：系统未使用，保留
运行级别5：图形GUI模式
运行级别6：系统正常关闭并重启&lt;/p&gt;
&lt;p&gt;存储在/etc/systemd/system/default.target
通过systemctl set-default xxx修改&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux概念知识 背景与发行版</title>
        <link>https://proben1.github.io/2024/linux%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86-%E8%83%8C%E6%99%AF%E4%B8%8E%E5%8F%91%E8%A1%8C%E7%89%88/</link>
        <pubDate>Sat, 11 May 2024 15:19:50 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E6%A6%82%E5%BF%B5%E7%9F%A5%E8%AF%86-%E8%83%8C%E6%99%AF%E4%B8%8E%E5%8F%91%E8%A1%8C%E7%89%88/</guid>
        <description>&lt;h3 id=&#34;从unics到unix&#34;&gt;从UNICS到UNIX
&lt;/h3&gt;&lt;p&gt;UNICS是“UNiplexed Information and Computing System”的简称，可以说是第一版UNIX，它由PDP-7机器的的汇编语言编写，因为PDP-7的性能不佳，开发者把第一版UNIX移植到PDP-11/20机器上，开发第二版，同时改名UNIX。1971年，汤普逊和里奇共同发明了C语言，重写了Unix，形成第三版UNIX。&lt;/p&gt;
&lt;h3 id=&#34;linux与unix&#34;&gt;Linux与UNIX
&lt;/h3&gt;&lt;p&gt;接上文，Unix从实验室走出来并成为了操作系统的主流，Unix是商业软件。Linus Torvalds以学生时代熟悉的Unix作为原型，开发了类UNIX操作系统Linux，没有保留 Linux 源代码的版权，公开了代码，并邀请他人一起完善 Linux。&lt;/p&gt;
&lt;h3 id=&#34;gnu计划&#34;&gt;GNU计划
&lt;/h3&gt;&lt;p&gt;GNU是“GNU is Not Unix”的缩写，目标是创建一套完全自由的操作系统，开发出包括C语言编译器&lt;a class=&#34;link&#34; href=&#34;https://zh.m.wikipedia.org/wiki/GCC&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GCC&lt;/a&gt;以及大部分UNIX系统的程序库和工具，在与Linux内核合并之后，产生了完全自由的操作系统。&lt;/p&gt;
&lt;h3 id=&#34;linux发行版&#34;&gt;Linux发行版
&lt;/h3&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://www.runoob.com/wp-content/uploads/2014/06/1511849829609658.jpg&#34; &gt;
		&lt;img src=&#34;https://www.runoob.com/wp-content/uploads/2014/06/1511849829609658.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux复杂命令</title>
        <link>https://proben1.github.io/2024/linux%E5%A4%8D%E6%9D%82%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Sat, 11 May 2024 15:13:26 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E5%A4%8D%E6%9D%82%E5%91%BD%E4%BB%A4/</guid>
        <description>&lt;h3 id=&#34;查看前五的占用cpu进程&#34;&gt;查看前五的占用CPU进程
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -eo pid,ppid,%mem,%cpu,cmd --sort=-%cpu | head -n 6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ps -e显示所有进程，-o自定义输出格式，包括pid,ppid,%mem,%cpu,cmd（启动进程的命令名），通过cpu使用率降序排列。head -n 可以改数量。&lt;/p&gt;
&lt;h3 id=&#34;在指定目录下查找超过3天的所有文件&#34;&gt;在指定目录下查找超过3天的所有文件
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find  目录 -ctime +3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;最近50个用户登录的记录&#34;&gt;最近50个用户登录的记录
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lastlog | head -n 51
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;22监听端口下所有进程的启动情况&#34;&gt;22监听端口下所有进程的启动情况
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -tulnp | grep 22
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查看环境变量过滤掉所有以开头的注释行&#34;&gt;查看环境变量，过滤掉所有以‘#’开头的注释行
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -v &amp;#39;^#&amp;#39; /etc/profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查询用户自动执行任务的配置情况&#34;&gt;查询用户自动执行任务的配置情况
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -l -u 用户名
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;修改当前命令行显示&#34;&gt;修改当前命令行显示
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PS1=&amp;#34;\u@\h:[\w]% &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;\u：当前用户名（如oracle）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;\h：主机名（如drocsdb1）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[\w]：当前工作目录（如/oracle）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;空格：留个空方便读
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;统计有多少个和mon相关的进程&#34;&gt;统计有多少个和“mon”相关的进程
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -ef | grep mon | wc -l	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#利用wc指令我们可以计算文件的Byte数、字数、或是列数
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#-l或--lines 显示行数
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;awk-print-2&#34;&gt;awk &amp;lsquo;{print $2}&amp;rsquo;
&lt;/h3&gt;&lt;p&gt;$2：表示第二个字段
print $2 ： 打印第二个字段
awk &amp;lsquo;{print $2}&amp;rsquo;  $fileName :   一行一行的读取指定的文件， 以空格作为分隔符，打印第二个字段
比如有这样一个文件
a1  b1  c1  d1
a2  b2  c2  d2
执行的结果是,输出
b1
b2&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux磁盘操作</title>
        <link>https://proben1.github.io/2024/linux%E7%A3%81%E7%9B%98%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Sat, 11 May 2024 14:33:57 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E7%A3%81%E7%9B%98%E6%93%8D%E4%BD%9C/</guid>
        <description>&lt;h3 id=&#34;磁盘常用命令&#34;&gt;磁盘常用命令
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lsblk
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df（英文全拼：disk free）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-h, --human-readable：以人类可读的格式显示输出结果。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-i, --inodes：显示 inode 使用情况而不是块使用情况。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-T, --print-type：显示文件系统的类型。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; du （英文全拼：disk usage）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 命令用于显示目录或文件的大小。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -h或--human-readable 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -s或--summarize 仅显示指定目录或文件的总大小，而不显示其子目录的大小。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; du -sh /ocs和 du -sh /ocs/* 分别查看目录使用空间和各个子目录使用空间
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;利用fdisk分区与挂载&#34;&gt;利用fdisk分区与挂载
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fdisk /dev/nvme0n1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n/p/e/+1G
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.xfs /dev/nvme0n1p3(56)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mount /dev/nvme0n1p3 /root/new
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(add &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;/dev/nvme0n1p3 /root/new xfs defaults 0 0&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;lvm基本创建&#34;&gt;LVM基本创建
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;fisk&amp;#34;&lt;/span&gt; create new partition
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;change the partition to &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;LVM&amp;#34;&lt;/span&gt;(8e)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pvcreate /dev/nvme0n1p3 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pvcreate /dev/nvme0n1p5 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pvcreate /dev/nvme0n1p6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vgcreate vg01 /dev/nvme0n1p3 /dev/nvme0n1p5 /dev/nvme0n1p6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvcreate -L 1g -n lvnew vg01
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.xfs /dev/vg01/lvnew
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;条带化： 创建LV时加入-i参数&lt;/p&gt;
&lt;h3 id=&#34;lvm基本扩容&#34;&gt;LVM基本扩容
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use &amp;#34;fisk&amp;#34; create new partition
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pvcreate /dev/nvme0n1p7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vgextend vg00 /dev/nvme0n1p7
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvextend -L +9.9G /dev/mapper/vg00-lvoracle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;或者
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvextend -l+100%FREE /dev/mapper/vg00-lvoracle
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xfs_growfs /dev/mapper/vg00-lvoracle
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;swap扩容&#34;&gt;SWAP扩容
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;swapoff 分区名/LV名（卸）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;对SWAP所在的文件系统扩容
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkswap 分区名/LV名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;swapon 分区名/LV名（挂）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;heading&#34;&gt;
&lt;/h3&gt;&lt;h3 id=&#34;案例&#34;&gt;案例
&lt;/h3&gt;&lt;h4 id=&#34;1如何分析处理当前目录下有哪些大的文件&#34;&gt;1、如何分析处理当前目录下有哪些大的文件？
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1，ls -al 确保没有隐藏文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2，du -sh /test和 du -sh /test/* 分别查看目录使用空间和各个子目录使用空间。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. lsof /test查看是否有某个进程使用的已删除的大文件，如果有kill掉进程
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2创建新文件时候遇到如下报错可能的原因&#34;&gt;2、创建新文件时候，遇到如下报错可能的原因？
&lt;/h4&gt;&lt;p&gt;touch:cannot touch `test.txt‘: No space left on device&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;block不足，可以通过df -h看到使用率100%	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inode不足，可以通过df -i看到使用率 100%（小文件过多，索引不够）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里提一下inode和block，在Linux系统中，文件由元数据和数据块组成。数据块就是多个连续性的扇区（sector），扇区是文件存储的最小单位（每个512字节）。块（block）的大小，最常见的是4KB，也就是连续8个sector组成，存储文件数据和目录数据。而元数据用来记录文件的创建者、创建日期、大小等，这种存储文件元数据信息的区域叫做inode，即索引节点。&lt;/p&gt;
&lt;p&gt;由于inode也是用来存储文件相关属性信息的，所以也会消耗硬盘空间。具体包含的信息有inode号，文件的字节数、User ID、Group ID、读、写、执行权限、时间戳（共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间）、链接数（软硬链接）、数据block的位置，注意没有文件名。&lt;/p&gt;
&lt;h4 id=&#34;3lvm扩容思路&#34;&gt;3、LVM扩容思路
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvs查看/test文件系统所在的lv使用的哪个vg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vgs查看是否还有剩余空间		
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pvs如果没有剩余空间，pvs查看是否还有未做PV的分区进行扩容
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;XFS和EXT4文件系统扩容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvextend –L 20G /dev/vg00/lvtest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#xfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xfs_growfs /dev/vg00/lvtest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#ext4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;resize2fs /dev/vg00/lvtest 20G
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4条带化&#34;&gt;4、条带化
&lt;/h4&gt;&lt;p&gt;把连续的数据分割成相同大小的数据块，把每段数据分别写入到阵列中的不同磁盘上，提升了存储性能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LVM中用“-i 磁盘数量”指令
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lvcreate –L 1500G -i 3 –n lvtest vg00
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;利用parted分区与挂载&#34;&gt;利用parted分区与挂载
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parted /dev/sdb1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mklabel gpt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkpart primary 0% 100%
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# Let the kernel know to add a new partition&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;partprobe 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.xfs /dev/sdb1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;heading-1&#34;&gt;
&lt;/h3&gt;</description>
        </item>
        <item>
        <title>Linux常用命令和vi速查</title>
        <link>https://proben1.github.io/2024/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8Cvi%E9%80%9F%E6%9F%A5/</link>
        <pubDate>Thu, 09 May 2024 15:55:13 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8Cvi%E9%80%9F%E6%9F%A5/</guid>
        <description>&lt;h3 id=&#34;版本内核查看&#34;&gt;版本、内核查看
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /etc/redhat-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /etc/os-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uname -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;关机重启&#34;&gt;关机、重启
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shutdown -h now
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;基本&#34;&gt;基本
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -al 额外参数：-t时间排序 -r反序 -h大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat 文件 | less
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find 目录 -name 名字
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r 源 目的 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv -r 源 目的 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch 文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file 文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln –s 实际文件 链接文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;du -sh /root/* （分开统计）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;du -sh /root （合并统计）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iostat #查看当前系统的读写情况
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;查找&#34;&gt;查找
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep根据文件的内容进行查找
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep [options] pattern [files]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-i：忽略大小写进行匹配。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-v：反向查找，只打印不匹配的行。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-n：显示匹配行的行号。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-r：递归查找子目录中的文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-l：只打印匹配的文件名。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-c：只打印匹配的行数。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find是根据文件的属性进行查找
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find [路径] [匹配条件] [动作]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-name pattern：按文件名查找，支持使用通配符 * 和 ?。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-type type：按文件类型查找，可以是 f（普通文件）、d（目录）、l（符号链接）等。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-size [+-]size[cwbkMG]：按文件大小查找，支持使用 + 或 - 表示大于或小于指定大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-user username：按文件所有者查找。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-group groupname：按文件所属组查找。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-amin n：查找在 n 分钟内被访问过的文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-atime n：查找在 n*24 小时内被访问过的文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-cmin n：查找在 n 分钟内状态发生变化的文件（例如权限）。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-ctime n：查找在 n*24 小时内状态发生变化的文件（例如权限）。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-mmin n：查找在 n 分钟内被修改过的文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-mtime n：查找在 n*24 小时内被修改过的文件。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;网络&#34;&gt;网络
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hostname
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hostnamectl set-hostname &amp;lt;newhostname&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ifconfig -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip addr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi /etc/sysconfig/network-scripts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TYPE=Ethernet（默认为以太网卡）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BOOTPROTO=static（更改为静态配置方式）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME=eth0（默认为网卡名）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEVICE=eth0（默认为网卡名）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ONBOOT=yes（更改自动启动为yes）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IPADDR=xx.xx.xx.xx（设置分配的IP地址）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NETMASK=xx.xx.xx.xx（设置分配的掩码）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GATEWAY=xx.xx.xx.xx（设置分配的网关）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart NetworkManager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart network
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;压缩打包&#34;&gt;压缩打包
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-c  创建文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-x  提取 解压还原文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-v  显示执行详细过程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-f  指定备份文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-t  列出压缩包中包括哪些文件，不解包，查看包中的内容
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-C  指定解压位置
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -cvf grub.tar /boot/grub/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xvf grub.tar.bz2 -C /opt/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;用户管理&#34;&gt;用户管理
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;groupadd –g GID groupname
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useradd –u 1601 –g GID(MAIN) –G GID(SUPPORT) –d /home/test –s /bin/bash –c “notes” username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usermod -L username（锁）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usermod -U username（解锁）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usermod -g groupname username（改主组）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usermod -aG groupname username（加副组）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;usermod -G othergroup username（重设副组）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;userdel -r username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;groupdel groupname
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su - username  切换用户，使用切换用户的变量 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su username 切换用户，使用当前用户的变量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo Commands 以root身份来执行自己不具备权限的操作
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;权限管理&#34;&gt;权限管理
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod 634 /tmp/test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chown -R user:gruop /tmp/test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;进程管理&#34;&gt;进程管理
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jobs：查看当前正在后台工作的进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fg：将后台进程放到前台执行 fg 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bg：将后台进程在后台继续执行 bg 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ctrl+z 同样也是放在后台执行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ 指令与参数 ] &amp;amp; &amp;lt;==在终端机前景中工作
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nohup [ 指令与参数 ] &amp;amp; &amp;lt;==在终端机背景中工作
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps aux或者ps –ef		打印当前系统运行的所有进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pstree 将当前时间点的进程树展示
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kill -9 PID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fuser -m /app 查看占用
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fuser –kcu /app 快速删除占用的进程
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;服务管理&#34;&gt;服务管理
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Systemctl命令使用方法
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;查询服务状态：systemctl status service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;启动服务：systemctl start service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;关闭服务：systemctl stop service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;重启服务：systemctl restart service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;使服务开机自启：systemctl enable service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;使服务开机不自启：systemctl disable service名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;查看启动时候的报错相关信息或者日志信息：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;journalctl -xe	带不带-xe都可，查看系统详细的日志
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl status xxxx 	也可以看到少量的日志
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vi&#34;&gt;vi
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;上左右下 hjkl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ Page Down ]和[ Page Up ]常用
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[ Home ]和[ End ]常用
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;u 撤销上一次操作
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ctrl + r 重做上一次撤销的操作
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(n)x 删除字符
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(n)dd 剪切
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(n)yy 复制
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p 粘贴
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:w  保存文件。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:q  退出编辑器。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:wq 保存退出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/word 向光标之下寻找
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;?word 向光标之上寻找
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n 重复前一个搜寻的动作
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif&#34; &gt;
		&lt;img src=&#34;https://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里提一下G和L的区别，G是直接文末，一般接?进行向上搜索；L是屏幕末尾，范围小于行末。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Oracle Linux Installation</title>
        <link>https://proben1.github.io/2024/oracle-linux-installation/</link>
        <pubDate>Thu, 09 May 2024 15:44:05 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/oracle-linux-installation/</guid>
        <description>&lt;h1 id=&#34;overview-of-linux&#34;&gt;Overview of Linux
&lt;/h1&gt;&lt;p&gt;GNU/Linux (Linux kernel + GNU suite), UNIX-like OS. Compared with Windows, it has the advantages of stable system performance, speed and security. Commonly used in servers, embedded systems, network firewalls and so on. Because of its open source, powerful network functions, the system tool chain is complete and popular.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPD1lNdCOfhtvM0cy9_189_209.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPD1lNdCOfhtvM0cy9_189_209.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Common versions: RHEL, Oracle Linux, CentOS, Ubuntu, Debian, SUSE, archlinux and so on.&lt;/p&gt;
&lt;h2 id=&#34;difference-between-unix-and-linux&#34;&gt;Difference between UNIX and Linux
&lt;/h2&gt;&lt;p&gt;UNIX is an operating system (non-open source) and linux is an open source operating system that has adopted the design concepts of the UNIX system in its many versions.&lt;/p&gt;
&lt;h2 id=&#34;basic-idea&#34;&gt;Basic idea
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Everything is a document.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every document has a defined purpose.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;linux-installation-and-basic-configuration&#34;&gt;Linux installation and basic configuration
&lt;/h1&gt;&lt;p&gt;System Oracle Linux 8.6 installation and configuration via VMware WORKSTATION PRO 17.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPD1lNdCOfNHTNAWvNAi8_559_363.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPD1lNdCOfNHTNAWvNAi8_559_363.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;basic-configuration&#34;&gt;Basic Configuration
&lt;/h3&gt;&lt;p&gt;After loading by VM, in the installation interface, select the language as English (United States), Language Support select EN (US) and Simplified Chinese in turn, and select the time zone at the same time.&lt;/p&gt;
&lt;p&gt;Enter the installation source, wait for loading and detection, select the local CD-ROM drive ISO file as the installation source, and select Minimized Installation in Software Selection.&lt;/p&gt;
&lt;h3 id=&#34;system-partitioning-customized-manual-partitioning&#34;&gt;System partitioning: customized manual partitioning
&lt;/h3&gt;&lt;p&gt;Boot partition：/boot, 1G, file system type is xfs, Device Type is Standard&lt;/p&gt;
&lt;p&gt;Root partition：/20G, adjust LVM settings, VG Name,vg00;RAID Level,None;Size policy,As large as possible;and change the name to lvroot.&lt;/p&gt;
&lt;p&gt;Partition in order (using LVM management, XFS file system format, belongs to VG00)&lt;/p&gt;
&lt;p&gt;/usr，10G，lvusr&lt;/p&gt;
&lt;p&gt;/var，50G，lvvar&lt;/p&gt;
&lt;p&gt;/tmp，1G，lvtmp&lt;/p&gt;
&lt;p&gt;swap，1G，lvswap&lt;/p&gt;
&lt;p&gt;/opt，10G，lvopt&lt;/p&gt;
&lt;p&gt;/home，1G，lvhome&lt;/p&gt;
&lt;p&gt;/var/tmp，5G，lvvar_tmp&lt;/p&gt;
&lt;p&gt;/var/log，10G，lvvar_log&lt;/p&gt;
&lt;p&gt;/var/log/audit，1G，lvvar_log_audit&lt;/p&gt;
&lt;p&gt;/soft，1G，lvsoft&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPD1lNdCN9mTHNAljNAyA_800_600.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPD1lNdCN9mTHNAljNAyA_800_600.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;others&#34;&gt;&lt;strong&gt;Others&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;KDUMP: check Enable kdump, select the policy as Automatic&lt;/p&gt;
&lt;p&gt;Security policy: keep the default value&lt;/p&gt;
&lt;p&gt;Password: set a strong password, at least 8 digits, including upper case letters, lower case letters, numbers and special symbols.&lt;/p&gt;
&lt;p&gt;Finish the loading configuration, perform a reboot, and choose to boot from Oracle Linux Server 8 UEK kernel by default when rebooting.&lt;/p&gt;
&lt;p&gt;Entered the system.&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPM3kEKZHdvGrMms0Bvg_446_154.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPM3kEKZHdvGrMms0Bvg_446_154.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;network-configuration&#34;&gt;Network Configuration
&lt;/h3&gt;&lt;p&gt;Go to the directory where the network cards are configured: cd /etc/sysconfig/network-scripts&lt;/p&gt;
&lt;p&gt;View all network cards: ifconfig -a&lt;/p&gt;
&lt;p&gt;Configure eth0 (lo for loopback) for remote connection to the system.&lt;/p&gt;
&lt;p&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/p&gt;
&lt;h3 id=&#34;check-the-version-and-kernel&#34;&gt;Check the Version and Kernel
&lt;/h3&gt;&lt;p&gt;version:&lt;/p&gt;
&lt;p&gt;cat /etc/redhat-release&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPM2rOLv7MPRI0zQGS_402_52.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPM2rOLv7MPRI0zQGS_402_52.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;cat /etc/os-release&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPM2OzMbU_tbDNAUvNAW8_367_331.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPM2OzMbU_tbDNAUvNAW8_367_331.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;kernel:&lt;/p&gt;
&lt;p&gt;uname -a&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPM3HpLEhaj2M1zQQb_1051_53.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPM3HpLEhaj2M1zQQb_1051_53.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
