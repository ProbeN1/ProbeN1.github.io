<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>计算机基础 on 茄子的养殖场</title>
        <link>https://proben1.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/</link>
        <description>Recent content in 计算机基础 on 茄子的养殖场</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 13 Jun 2022 13:37:17 +0800</lastBuildDate><atom:link href="https://proben1.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>理解Windows认证</title>
        <link>https://proben1.github.io/2022/%E7%90%86%E8%A7%A3windows%E8%AE%A4%E8%AF%81/</link>
        <pubDate>Mon, 13 Jun 2022 13:37:17 +0800</pubDate>
        
        <guid>https://proben1.github.io/2022/%E7%90%86%E8%A7%A3windows%E8%AE%A4%E8%AF%81/</guid>
        <description>&lt;p&gt;内网小白一枚，打算从一个个概念开始记&lt;/p&gt;
&lt;h1 id=&#34;windows本地认证&#34;&gt;Windows本地认证
&lt;/h1&gt;&lt;h2 id=&#34;sam数据库&#34;&gt;SAM数据库
&lt;/h2&gt;&lt;p&gt;路径：&lt;code&gt;%SystemRoot%\system32\config\sam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当我们登录系统的时候，系统会自动地读取SAM文件中的“密码”与我们输入的 “密码”进行比对，如果相同，证明认证成功。&lt;/p&gt;
&lt;h2 id=&#34;lan-manager-hash&#34;&gt;LAN Manager Hash
&lt;/h2&gt;&lt;p&gt;LM Hash(LAN Manager Hash) 是windows最早用的加密算法，由IBM设计。LM Hash 使用硬编码秘钥的DES，且存在缺陷。早期的Windows系统如XP、Server 2003等使用LM Hash，而后的系统默认禁用了LM Hash并使用NTLM Hash。&lt;/p&gt;
&lt;p&gt;作为早期的算法，LM Hash存在着诸多问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;密码长度不会超过14字符，且不区分大小写&lt;/li&gt;
&lt;li&gt;如果密码长度小于7位，后一组哈希的值确定，可以通过结尾为 &lt;code&gt;aad3b435b51404ee&lt;/code&gt; 来判断密码长度不超过7位（可以看下分析）&lt;/li&gt;
&lt;li&gt;分组加密极大程度降低了密码的复杂度&lt;/li&gt;
&lt;li&gt;DES算法强度低&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nt-lan-mangger-hash&#34;&gt;NT LAN Mangger Hash
&lt;/h2&gt;&lt;p&gt;NTLM（NT LAN Mangger）Hash，也叫NT Hash，是支持&lt;strong&gt;Net NTLM认证协议&lt;/strong&gt;(这个以后说)及&lt;strong&gt;本地认证&lt;/strong&gt;过程中的一个重要参数。其长度为32位，由数字与字母组成。&lt;/p&gt;
&lt;p&gt;Windows本身不储存用户的明文密码，而是通过加密算法之后储存到SAM数据库里。当用户登录时，输入的密码也通过NTML Hash与SAM中的NTML Hash比较。&lt;/p&gt;
&lt;p&gt;生成算法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;明文转换为16进制ASCII码&lt;/li&gt;
&lt;li&gt;使用little-endian(小端)序将其在转换为Unicode格式。0x80之前的标准ASCII码转换成Unicode码，就是简单地从0x??变成 0×00??。此类标准ASCII串按little-endian序转换成Unicode串，就是简单地在原有每个字节之后添加0×00&lt;/li&gt;
&lt;li&gt;对所获取的 Unicode串进行标准MD4单向哈希，无论数据源有多少字节，MD4固定产生128-bit的哈希值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62a6d1c70947543129661a9f.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62a6d1c70947543129661a9f.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;流程&#34;&gt;流程
&lt;/h2&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62a6d29f0947543129672a11.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62a6d29f0947543129672a11.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;winlogon.exe -&amp;gt; 接收用户输入 -&amp;gt; lsass.exe -&amp;gt; (认证)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先，用户注销、重启、锁屏后，操作系统会让winlogon显示登录界面，也就是输入框，接收输入后，会将密码交给lsass进程，这个进程中会存一份明文密码，随后明文密码加密成NTLM Hash，对SAM数据库比较认证。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows Logon Process(即 winlogon.exe)，是Windows NT 用户登 陆程序，用于管理用户登录和退出。&lt;/li&gt;
&lt;li&gt;LSASS用于微软Windows系统的安全机 制。它用于本地安全和登陆策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;windows网络认证&#34;&gt;Windows网络认证
&lt;/h1&gt;&lt;h2 id=&#34;工作组和域&#34;&gt;工作组和域
&lt;/h2&gt;&lt;h3 id=&#34;工作组-work-group&#34;&gt;工作组 Work Group
&lt;/h3&gt;&lt;p&gt;在Windows 9x/NT/2008就引用了“工作组”这个概念，将不同的电脑一般按功能分别列入不同的组中。&lt;/p&gt;
&lt;p&gt;你也可以退出某个工作组，只要将工作组名称改动即可。不过这样在网上别人照样可以访问你的共享资源，只不过换了一个工作组而已。你可以随便加入同一网络上的任何工作组，也可以离开一个工作组。“工作组”就像一个自由加入和退出的俱乐部一样，它本身的作用仅仅是提供一个“房间”，以方便网上计算机共享资源的浏览。&lt;/p&gt;
&lt;p&gt;工作组环境是一个逻辑上的网络环境，隶属于工作组的机器之间无法互相建 立一个完美的信任机制。&lt;/p&gt;
&lt;p&gt;假设A主机与B主机属于同一个工作组环境，A想访问B主机上的资料，需要将一个存在于B主机上的账户凭证发送至B主机，经过认证才能够访问B主机上的资源。&lt;/p&gt;
&lt;p&gt;eg:445端口SMB服务&lt;/p&gt;
&lt;h3 id=&#34;域-domain&#34;&gt;域 Domain
&lt;/h3&gt;&lt;p&gt;与工作组的“松散会员制”有所不同，域”是一个相对严格的组织。“域”指的是服务器控制网络上的计算机能否加入的计算机组合。&lt;/p&gt;
&lt;p&gt;在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为“域控制器（Domain Controller，简写为DC）”。“域控制器”中包含了由这个域的账户、密码、属于这个域的计算机等信息构成的数据库。当电脑联入网络时，域控制器首先要鉴别这台电脑是否是属于这个域的。&lt;/p&gt;
&lt;h2 id=&#34;ntlm协议&#34;&gt;NTLM协议
&lt;/h2&gt;&lt;p&gt;SMB协议明文传输，于是有了LAN Manager Challenge/Response 验证机制，检查LM，但是也很容易被破解，于是微软提出了NTLM协议（现在有NTLMv2和Kerberos）&lt;/p&gt;
&lt;p&gt;NTLM采用一种质询/应答（Challenge/Response）消息交换模式。&lt;/p&gt;
&lt;h3 id=&#34;chalengeresponse&#34;&gt;Chalenge/Response
&lt;/h3&gt;&lt;p&gt;Chalenge/Response模式企图不泄露明文口令本身就能证明客户机确实拥有正确的口令。&lt;/p&gt;
&lt;p&gt;协商：主要用于确认双方协议版本&lt;/p&gt;
&lt;p&gt;质询：ChalengeResponse&lt;/p&gt;
&lt;p&gt;验证：验证结果&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62a6eac209475431298b0169.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62a6eac209475431298b0169.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1.客户端向服务器发出认证请求；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2.认证服务器从用户数据库中查询用户是否是合法的用户，若不是，则不做进一步的处理；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3.认证服务器内部产生一个随机数，作为Challenge，发送给用户；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4.客户将口令和随机数合并，使用单向Hash函数 ( 例如MD5算法 ) 生成一个字节串作为Response；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.认证服务器将Response与自己的计算结果比较，如两者相同，则通过一次认证，反之认证失败；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6.认证服务器通知客户端认证成功或失败
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ntlmv2协议&#34;&gt;NTLMv2协议
&lt;/h2&gt;&lt;p&gt;NTLM v1与NTLM v2最显著的区别就是Challenge与&lt;strong&gt;加密算法&lt;/strong&gt;不相同 。&lt;/p&gt;
&lt;p&gt;前者的Challenge为8位，后者为16位。&lt;/p&gt;
&lt;p&gt;前者使用的主要加密算法是DES，后者使用的主要加密算法是HMAC-MD5。&lt;/p&gt;
&lt;h2 id=&#34;pass-the-hash&#34;&gt;Pass The Hash
&lt;/h2&gt;&lt;p&gt;哈希传递是能够在不需要账户明文密码的情况下完成认证的一个技术。&lt;/p&gt;
&lt;p&gt;当使用其他方式得到用户名对应的NTLM Hash时，可以对服务器给出的 Chanllenge加密，生成一个Response，来完成认证。也就避免了密码。&lt;/p&gt;
&lt;h1 id=&#34;lm-hash脆弱性分析附&#34;&gt;LM Hash脆弱性分析（附）
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;将所有小写字母转换为大写字母&lt;/li&gt;
&lt;li&gt;123ABC // 未达到7个字符&lt;/li&gt;
&lt;li&gt;将密码转化为16进制，分两组，填充为14个字符,空余位使用0x00字符填补&lt;/li&gt;
&lt;li&gt;31323341424300000000000000&lt;/li&gt;
&lt;li&gt;将密码分割为两组7个字节的块&lt;/li&gt;
&lt;li&gt;&amp;gt;31323341424300 00000000000000 // 16进制&lt;/li&gt;
&lt;li&gt;将每组转化为比特流，不足56Bit则在左边加0&lt;/li&gt;
&lt;li&gt;31323341424300 -&amp;gt;(转换为二进制) 110001001100100011001101000001010000100100001100000000-&amp;gt; (补足56Bit)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;00&lt;/code&gt;110001001100100011001101000001010000100100001100000000&lt;/li&gt;
&lt;li&gt;将比特流按照7比特一组，分出8组，末尾加0&lt;/li&gt;
&lt;li&gt;由于后者都为0，结果可想而知，那就都是0;&lt;/li&gt;
&lt;li&gt;将每组比特流转换为16进制作为被加密的值，使用DES加密，字符串 &lt;code&gt;KGS!@#$%为Key(0x4B47532140232425)&lt;/code&gt;，得到8个结果 ，每个 结果转换为16进制。&lt;/li&gt;
&lt;li&gt;-&amp;gt; 0011000010011000100011000110100000010100000100100000110000000000&lt;/li&gt;
&lt;li&gt;-&amp;gt;30988C6814120C00 -&amp;gt; DES(30988C6814120C00) -&amp;gt; 48-D7-EB-91- 2F-5E-69-7C&lt;/li&gt;
&lt;li&gt;由于我们的密码不超过7字节，所以后面的一半是固定的:&lt;/li&gt;
&lt;li&gt;AA-D3-B4-35-B5-14-04-EE&lt;/li&gt;
&lt;li&gt;连接两个DES加密字符串。这是LM哈希。&lt;/li&gt;
&lt;li&gt;48-D7-EB-91-2F-5E-69-7C-AA-D3-B4-35-B5-14-04-EE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/0d4y/p/12805112.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/0d4y/p/12805112.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.secpulse.com/archives/94848.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.secpulse.com/archives/94848.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/articles/web/332190.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/articles/web/332190.html&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Windows权限基础</title>
        <link>https://proben1.github.io/2022/windows%E6%9D%83%E9%99%90%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Sun, 10 Apr 2022 09:10:24 +0800</pubDate>
        
        <guid>https://proben1.github.io/2022/windows%E6%9D%83%E9%99%90%E5%9F%BA%E7%A1%80/</guid>
        <description>&lt;h4 id=&#34;用户账户&#34;&gt;用户账户：
&lt;/h4&gt;&lt;p&gt;用户帐户是对计算机用户身份的标识。每个用户包含一个名称和一个密码&lt;/p&gt;
&lt;p&gt;SID：用户帐户拥有唯一的安全标识符&lt;/p&gt;
&lt;p&gt;SAM：本地安全帐户数据库，文件路径：C:\Windows\System32\config\SAM ，进程：lsass.exe&lt;/p&gt;
&lt;p&gt;本地用户和组：为用户和组分配权利和权限，从而限制用户和组执行某些操作的能力。&lt;/p&gt;
&lt;p&gt;一个用户可以在不同的组里，一个组也可以有不同的用户。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;whoami /user   查看系统当前用户的SID&lt;/li&gt;
&lt;li&gt;wmic useraccount get name,sid   查看所有用户的SID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62523004239250f7c5dad75e.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62523004239250f7c5dad75e.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;默认账户&#34;&gt;默认账户
&lt;/h4&gt;&lt;p&gt;**权限：**System &amp;gt; Administrator &amp;gt; User &amp;gt; Guest&lt;/p&gt;
&lt;p&gt;与windows组件关联的用户账户&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System (本地系统)：为windows的核心组件访问文件等资源提供权限；&lt;/li&gt;
&lt;li&gt;Local Service (本地服务)：预设的拥有最小权限的本地账户；&lt;/li&gt;
&lt;li&gt;Network Service (网络服务)：具有运行网络服务权限的计算机账户&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;查看创建和删除账户&#34;&gt;查看、创建和删除账户
&lt;/h4&gt;&lt;p&gt;使用命令查看、创建和删除账户：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;net user　　  查看系统账户&lt;/li&gt;
&lt;li&gt;net user  xie   123  /add    创建新用户xie，密码设置为 123&lt;/li&gt;
&lt;li&gt;net user  hack$ 123 /add    创建隐藏用户hack，密码为123&lt;/li&gt;
&lt;li&gt;net user xie    查看账户xie的属性&lt;/li&gt;
&lt;li&gt;net user xie x456.  将用户写的密码修改为x456.&lt;/li&gt;
&lt;li&gt;net user xie /del  删除用户xie&lt;/li&gt;
&lt;li&gt;net localgroup  administrators xie  /add   将普通用户xie提权到管理员&lt;/li&gt;
&lt;li&gt;net localgroup  administrators hack$ /add  将隐藏用户hack提权到管理员&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;用户组&#34;&gt;用户组
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Administrators&lt;/li&gt;
&lt;li&gt;Guests&lt;/li&gt;
&lt;li&gt;Power Users&lt;/li&gt;
&lt;li&gt;Users（标准用户）&lt;/li&gt;
&lt;li&gt;Remote Desktop Users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;administators&lt;/strong&gt; 组内的用户，都具备系统管理员的权限，它们拥有对这台计算机最大的控制权限，可以执行整台计算机的管理任务。内置的系统管理员账号 Administrator 就是本地组的成员，而且无法将它从该组删除。如果这台计算机已加入域，则域的Domain Admins 会自动地加入到该计算机的Administrators组内。也就是说，域上的系统管理员在这台计算机上也具备着系统管理员的权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Guests&lt;/strong&gt; 组是提供给没有用户帐户但是需要访问本地计算机内资源的用户使用，该组的成员无法永久地改变其桌面的工作环境。该组最常见的默认成员为用户帐号Guest。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Power Users&lt;/strong&gt; 组内的用户具备比Users组更多的权利，但是比Administrators组拥有的权利更少一些，例如，可以：创建、删除、更改本地用户帐户；创建、删除、管理本地计算机内的共享文件夹与共享打印机；自定义系统设置，例如更改计算机时间、关闭计算机等。但是不可以更改Administrators，无法夺取文件的所有权、无法备份与还原文件、无法安装删除与删除设备驱动程序、无法管理安全与审核日志。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt; 组内的成员只拥有一些基本的权利，例如运行应用程序，但是他们不能修改操作系统的设置、不能更改其它用户的数据、不能关闭服务器级的计算机。所有添加的本地用户帐户者自动属于Users组。如果这台计算机已经加入域，则域的Domain Users会自动地被加入到该计算机的Users组中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Remote Desktop Users&lt;/strong&gt; 组内的成员拥有远程桌面登录的权限。默认Administrators组内的成员都拥有远程桌面的权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;动态包含成员的内置组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其成员由Windows程序“自动添加” ，Windows会根据用户的状态来决定用户所属的组 ，组内的成员也随之动态变化，无法修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;strong&gt;Interactive：*&lt;/strong&gt; 动态包含在本地登录的用户；&lt;/li&gt;
&lt;li&gt;*&lt;strong&gt;Authenticated Users*&lt;/strong&gt;：任何一个利用有效的用户帐户连接的用户都属于这个组。建议在设置权限时，尽量针对Authenticated Users组进行设置，而不要针对Everone进行设置。&lt;/li&gt;
&lt;li&gt;*&lt;strong&gt;Everyone*&lt;/strong&gt; ：任何一个用户都属于这个组。注意，如果Guest帐号被启用时，则给Everone这个组指派权限时必须小心，因为当一个没有帐户的用户连接计算机时，他被允许自动利用Guest帐户连接，但是因为Guest也是属于Everone组，所以他将具备Everyone所拥有的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;组的查看创建和删除&#34;&gt;组的查看、创建和删除
&lt;/h4&gt;&lt;p&gt;*&lt;strong&gt;使用命令查看、创建和删除组*&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;net localgroup  查看系统的组&lt;/li&gt;
&lt;li&gt;net localgroup  marketGroup  /add     新建一个marketGroup的组&lt;/li&gt;
&lt;li&gt;net localgroup  marketGroup  xie /add  将用户xie加入marketGroup组中&lt;/li&gt;
&lt;li&gt;net localgroup  markGroup   查看markGroup组内的成员&lt;/li&gt;
&lt;li&gt;net localgroup  marketGroup  xie /del  将用户xi从marketGroup组中移除&lt;/li&gt;
&lt;li&gt;net localgroup  marketGroup  /del      删除marketGroup组&lt;/li&gt;
&lt;li&gt;net localgroup &amp;ldquo;remote desktop users&amp;rdquo; hack /add   将用户hack加入远程桌面组&lt;/li&gt;
&lt;li&gt;net localgroup &amp;ldquo;remote desktop users&amp;rdquo; hack /del   将用户hack从远程桌面组删除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6252316c239250f7c5dd0d72.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6252316c239250f7c5dd0d72.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;WDAGUtilityAccount帐户是Windows Defender Application Guard的一部分，它包含在RS3（aka windows 10 fall update）中。&lt;/p&gt;
&lt;p&gt;DefaultAccount用于开机自检阶段。&lt;/p&gt;
&lt;p&gt;BvSsh_VirtualUsers 是设置 BitWise（详见https://www.bitwise.nl/）虚拟用户时，创建的一个用户并将其用作写入文件的安全上下文。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>P5461赦免战俘</title>
        <link>https://proben1.github.io/2021/p5461%E8%B5%A6%E5%85%8D%E6%88%98%E4%BF%98/</link>
        <pubDate>Mon, 22 Nov 2021 16:37:25 +0800</pubDate>
        
        <guid>https://proben1.github.io/2021/p5461%E8%B5%A6%E5%85%8D%E6%88%98%E4%BF%98/</guid>
        <description>&lt;h1 id=&#34;p5461-赦免战俘&#34;&gt;P5461 赦免战俘
&lt;/h1&gt;&lt;p&gt;心态小裂，写了n遍，最后发现循环里忘加x，y了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt; = [[&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;**&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;)] &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;**&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;**&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;)) :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;)) :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt;][&lt;span style=&#34;color:#268bd2&#34;&gt;j&lt;/span&gt;] = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#268bd2&#34;&gt;x&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;),&lt;span style=&#34;color:#268bd2&#34;&gt;y&lt;/span&gt;+&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;/&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;,&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;**&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;**&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt;][&lt;span style=&#34;color:#268bd2&#34;&gt;j&lt;/span&gt;],&lt;span style=&#34;color:#268bd2&#34;&gt;end&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>刷题1</title>
        <link>https://proben1.github.io/2021/%E5%88%B7%E9%A2%981/</link>
        <pubDate>Mon, 22 Nov 2021 16:35:10 +0800</pubDate>
        
        <guid>https://proben1.github.io/2021/%E5%88%B7%E9%A2%981/</guid>
        <description>&lt;h4 id=&#34;182-查找重复的电子邮箱httpsleetcode-cncomproblemsduplicate-emails&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/duplicate-emails/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;182. 查找重复的电子邮箱&lt;/a&gt;
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; `&lt;span style=&#34;color:#268bd2&#34;&gt;Email&lt;/span&gt;` &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; `&lt;span style=&#34;color:#268bd2&#34;&gt;Email&lt;/span&gt;`, &lt;span style=&#34;color:#859900&#34;&gt;count&lt;/span&gt;(`&lt;span style=&#34;color:#268bd2&#34;&gt;Email&lt;/span&gt;`) &lt;span style=&#34;color:#859900&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; `&lt;span style=&#34;color:#268bd2&#34;&gt;Person&lt;/span&gt;`
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt; `&lt;span style=&#34;color:#268bd2&#34;&gt;Email&lt;/span&gt;`
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;temp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一些不熟悉的语句&lt;/p&gt;
&lt;p&gt;like 模糊查询&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;last_name&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;%a%&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;group by（常常和聚合函数一起使用）
聚合函数：&lt;strong&gt;count() , sum() , avg() , max() , min()&lt;/strong&gt;
根据by对数据按照哪个字段进行分组，或者是哪几个字段进行分组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt;  字段   &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt;  表名  &lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt;   条件   &lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt;  &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt;    字段;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 单字段
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;grade&lt;/span&gt;  &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;student&lt;/span&gt;   &lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt;   &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt;   &lt;span style=&#34;color:#268bd2&#34;&gt;grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 多字段
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;name&lt;/span&gt; , &lt;span style=&#34;color:#859900&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;salary&lt;/span&gt;)    &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt;   &lt;span style=&#34;color:#268bd2&#34;&gt;student&lt;/span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt;  &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt;   &lt;span style=&#34;color:#268bd2&#34;&gt;name&lt;/span&gt; , &lt;span style=&#34;color:#268bd2&#34;&gt;grade&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;name和grade看成一个整体&lt;/span&gt;，&lt;span style=&#34;color:#268bd2&#34;&gt;name和grade相同的才可以分成一组&lt;/span&gt;，一个不一样就不能分成一组。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;having 对group by分组和聚合之后的数据进行过滤
（与where正好相反）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt;  字段   &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt;  表名  &lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt;  &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt;   字段   &lt;span style=&#34;color:#859900&#34;&gt;having&lt;/span&gt;   过滤条件;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-- 查找人数大于 5 的部门
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;dept_id&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;count&lt;/span&gt;(*)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;employee&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;dept_id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;count&lt;/span&gt;(*) &amp;gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;5&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;dept_id&lt;/span&gt;|&lt;span style=&#34;color:#859900&#34;&gt;count&lt;/span&gt;(*)|
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-------|--------|
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;|       &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;9&lt;/span&gt;|
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;5&lt;/span&gt;|       &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;8&lt;/span&gt;|
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;union 联合查询&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;eamil&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;%a%&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;department_id&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;90&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;相当于
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;eamil&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;%a%&amp;#39;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;union&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; * &lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;employees&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;department_id&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;90&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CONCAT() 函数&lt;/p&gt;
&lt;p&gt;CONCAT(str1,str2,…)&lt;/p&gt;
&lt;p&gt;将多个字符串连接成一个字符串。&lt;/p&gt;
&lt;p&gt;GROUP_CONCAT（）函数&lt;/p&gt;
&lt;p&gt;返回一个字符串结果，该结果由分组中的值连接组合而成。&lt;/p&gt;
&lt;h4 id=&#34;175-组合两个表httpsleetcode-cncomproblemscombine-two-tables&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://leetcode-cn.com/problems/combine-two-tables/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;175. 组合两个表&lt;/a&gt;
&lt;/h4&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;FirstName&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;LastName&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;City&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;State&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Person&lt;/span&gt;  &lt;span style=&#34;color:#859900&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Address&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Person&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;PersonId&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;Address&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;PersonId&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;left join&lt;/p&gt;
&lt;p&gt;也叫left outer join，外连接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、 &lt;strong&gt;on&lt;/strong&gt; 条件是在生成临时表时使用的条件，它不管 &lt;strong&gt;on&lt;/strong&gt; 中的条件是否为真，都会返回左边表中的记录。&lt;/li&gt;
&lt;li&gt;2、&lt;strong&gt;where&lt;/strong&gt; 条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有 &lt;strong&gt;left join&lt;/strong&gt; 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;p1255-数楼梯&#34;&gt;P1255 数楼梯
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;gogogo&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;gogogo&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt;-&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;) + &lt;span style=&#34;color:#268bd2&#34;&gt;gogogo&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt;-&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;index&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;gogogo&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;思路是对的，但是层数一多就g了&lt;/p&gt;
&lt;p&gt;于是想用循环取代递归&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt; = [&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;+&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;] = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;+&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt;] = &lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt;-&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;] + &lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt;-&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;l&lt;/span&gt;[&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样是可以通过的&lt;/p&gt;
&lt;p&gt;但是上网又搜了一个更恐怖的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())): 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; + &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;p1143-进制转换&#34;&gt;P1143 进制转换
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;trans_map&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;不合法&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt; &amp;gt;= &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;chr&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;cint&lt;/span&gt; - &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt; + &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;65&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;anyToTen&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;m&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 任意进制的数转换为10机制&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 先将m转换为10进制&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 公式 num = an * m**(n-1) + an-1 * m**(n-2).....+ a0 * m**0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 直接利用int的自带功能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;str&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt;), &lt;span style=&#34;color:#268bd2&#34;&gt;base&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;m&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tenToAny&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 10进制转换为任意进制的数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt; = []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 取商&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#268bd2&#34;&gt;s&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt; // &lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 取余数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt; % &lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;trans_map&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;s&lt;/span&gt; == &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#859900&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;s&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reverse&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt; = [&lt;span style=&#34;color:#cb4b16&#34;&gt;str&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;each&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;each&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;list&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 将一个m进制的数转换为一个n进制的数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;transfer&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;m&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;num&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;anyToTen&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;m&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;origin&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;target&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;tenToAny&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;n&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;num&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;__name__&lt;/span&gt; == &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;c&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;int&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;input&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;transfer&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;a&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;c&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;b&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
