<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>思考总结 on 茄子的养殖场</title>
        <link>https://proben1.github.io/tags/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/</link>
        <description>Recent content in 思考总结 on 茄子的养殖场</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 21 May 2024 17:55:29 +0800</lastBuildDate><atom:link href="https://proben1.github.io/tags/%E6%80%9D%E8%80%83%E6%80%BB%E7%BB%93/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>技术学习与团队成长</title>
        <link>https://proben1.github.io/2024/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%9B%A2%E9%98%9F%E6%88%90%E9%95%BF/</link>
        <pubDate>Tue, 21 May 2024 17:55:29 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%9B%A2%E9%98%9F%E6%88%90%E9%95%BF/</guid>
        <description>&lt;p&gt;作为部门的一员，一名工程师如果只有技术上的属性，那么他只能算合格；一名优秀的工程师，需要同时兼顾技术能力与团队沟通，正如描述所言：独行快，众行远。&lt;/p&gt;
&lt;p&gt;下面是我认为在工作和学习中需要遵循的原则，当遇事犹豫之时，可依此为指导，方能不忘初心。&lt;/p&gt;
&lt;h2 id=&#34;团队&#34;&gt;团队
&lt;/h2&gt;&lt;h3 id=&#34;汇报&#34;&gt;汇报
&lt;/h3&gt;

&lt;blockquote class=&#34;quote en&#34;&gt;
        &lt;p&gt;凡是有交代，件件有着落，事事有回音。——致靠谱的人&lt;/p&gt;&lt;/blockquote&gt; 
&lt;p&gt;多交流，多沟通，多汇报。这不单是对自己负责，更是对团队负责。我的建议是当你拿不准要不要汇报的时候，就要汇报一下，不要不作为。&lt;/p&gt;
&lt;p&gt;作为技术人员，技术上有不懂的地方很正常，可以学习，可以提升。但是汇报的态度是工作的基本。遇到了什么困难，要进行交代，不要不好意思；有什么发现，及时沟通，不要私下处理。有沟通的团队才能良好的运作下去。&lt;/p&gt;
&lt;h3 id=&#34;沟通&#34;&gt;沟通
&lt;/h3&gt;&lt;p&gt;其实还是强调了汇报的重要性，不过这里我单独提一嘴，关于需要休息时间打扰别人的问题。
先说结论：在你有任务需求的情况下，正常休息日打扰别人是完全合理的，不要觉得不好意思。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;实习期间发生的一件事，直属领导要求周末完成对服务器的安装，但是机房的负责人在周末休息，并表示周三之前完成安装就可以。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;我们当时因为没有钥匙进不去机房，就没有在周末打扰机房的负责人开门，同时也没有告知领导，等着周一去处理这件事情。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;这就是一种完全错误的方法。正确的做法应该直接联系机房负责人（他回不回消息就是他的事情了），随后把结果告知直属领导，等待下一步指示。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;技术&#34;&gt;技术
&lt;/h2&gt;&lt;h3 id=&#34;安全红线&#34;&gt;安全红线
&lt;/h3&gt;&lt;p&gt;生产环境操作要三思。&lt;/p&gt;
&lt;p&gt;当你拿不准操作是否有问题的时候，问一下，走流程，就算最后还是出现问题，那也不是个人的问题。&lt;/p&gt;



&lt;div class=&#34;notice notice-warning&#34; &gt;
    &lt;div class=&#34;notice-title&#34;&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; class=&#34;icon notice-icon&#34; viewBox=&#34;0 0 576 512&#34;&gt;&lt;path d=&#34;M570 440c18 32-5 72-42 72H48c-37 0-60-40-42-72L246 24c19-32 65-32 84 0l240 416zm-282-86a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z&#34;/&gt;&lt;/svg&gt;&lt;/div&gt;&lt;p&gt;危险命令相关&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;首先不能敲危险命令（rm -f、mkfs之类的），其次不能敲类危险命令。甚么是类危险命令呢(O_o)??&lt;/p&gt;
&lt;p&gt;就是长得像危险命令的命令，比如一些命令，对目录操作没问题，但是假如在/test的“/”和&amp;quot;test&amp;quot;之间不小心按了个空格，命令就会直接对根目录生效，导致严重的后果。（举个通俗的例子，&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;打成&lt;code&gt;&amp;gt;&lt;/code&gt;）&lt;/p&gt;
&lt;h3 id=&#34;质疑精神&#34;&gt;质疑精神
&lt;/h3&gt;&lt;p&gt;不是所有问题都只有一个答案，不是所有场景都只有一种解决方案。从不同角度分析问题，提出新的解决方案或是企图找到更好的方案。&lt;/p&gt;
&lt;p&gt;同事或者领导并不一定完全是对的，他们的经验和观点十分宝贵，但也可能存在局限性。你需要保持独立思考的能力，多去尝试，遇到问题以实践为标准。&lt;/p&gt;
&lt;h3 id=&#34;深究精神&#34;&gt;深究精神
&lt;/h3&gt;&lt;p&gt;接上文，遇到问题以实践为标准，为什么会出现这样的结果？需要事后的思考和总结。&lt;/p&gt;
&lt;p&gt;就举一个最最入门的例子吧，刚学Linux命令的时候，为什么cd叫cd，du叫du，这些命令后面是有具体英文含义的，不是死记硬背的出来的，比如cd（change directory）、du（disk usage）、甚至du里的-s（summary）都是有含义的。&lt;/p&gt;
&lt;p&gt;再比如，装系统的时候踩过的坑，Linux8.6图形界面配置网络之后无法更改，最后发现是network和NetworkManager冲突的问题，同时得出结论在使用操作系统时有良好的操作习惯，在配置网络尽量用命令行。从一个小问题引申出来的技术点和之后的规避。&lt;/p&gt;
&lt;h3 id=&#34;分享精神&#34;&gt;分享精神
&lt;/h3&gt;&lt;p&gt;好好写笔记，第一遍笔记是自己一手输出的随笔，有很强的时效性（包括当时的记忆），但缺乏整理，只有自己在记完的那一段时间里可以看得懂。需要养成整理笔记的良好习惯，不单单是对自己负责，还可以输出给别人理解学习，在历史上留下浓墨重彩的一笔（不是）。&lt;/p&gt;
&lt;h3 id=&#34;出差&#34;&gt;出差
&lt;/h3&gt;&lt;p&gt;技术过硬！&lt;/p&gt;
&lt;p&gt;自信！&lt;/p&gt;
&lt;p&gt;找点乐子！&lt;/p&gt;
&lt;p&gt;以及抱着和客户快乐交流的基本原则。&lt;/p&gt;
&lt;h3 id=&#34;结语&#34;&gt;结语
&lt;/h3&gt;&lt;p&gt;个人的成长过程是贯穿始终的，是以年为单位的，而且会一直持续数十年。每位&lt;code&gt;工程师&lt;/code&gt;的学习方法、工作方法、学习态度等等，都要经历数十年的考验，谨记。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第一次面试经历</title>
        <link>https://proben1.github.io/2022/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</link>
        <pubDate>Sun, 10 Apr 2022 09:13:17 +0800</pubDate>
        
        <guid>https://proben1.github.io/2022/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/</guid>
        <description>&lt;p&gt;hvv蓝队&lt;/p&gt;
&lt;p&gt;西邮的一个学长，很温柔&lt;/p&gt;
&lt;p&gt;先是看我加入了AD网络安全协会，他说自己是协会的创始人之一，我tm直接借机套一波近乎先，吹了下协会&lt;/p&gt;
&lt;p&gt;然后开始面试&lt;/p&gt;
&lt;p&gt;首先问了下《白帽子》，通过这本书我都了解些什么，我大概说了下安全世界观的事情，安全的本质是信任，扯了扯。第二个问sql注入的流程，分类，流程很简单，就是找个框就开注，遇到过滤fuzz一下，该绕过绕过；&lt;/p&gt;
&lt;p&gt;分类我分了三大类，差不多原话答&lt;/p&gt;
&lt;p&gt;1、按注入点数据类型分类：数字型、字符型
2、按数据传参方式分类：GET注入、POST注入、header头注入（cookie注入、host注入、user-agent注入、referer注入…）
3、按执行效果分类：union注入攻击、Boolean注入攻击-布尔盲注、报错注入攻击、时间注入攻击-时间盲注、堆叠查询注入攻击、二次注入攻击、宽字节注入攻击…&lt;/p&gt;
&lt;p&gt;接下来问了报错注入，我超我记不清，就记得e和u开头的俩函数，就实话实说了，但是等一会又想起来了，有一个updatexml，他问啥是xpath，我说是xml路径。最后他打了个圆场，可能我学太多忘了。&lt;/p&gt;
&lt;p&gt;补充一下&lt;/p&gt;
&lt;p&gt;floor报错注入，利用数据库表主键不能重复的原理，使用GROUP BY分组，产生主键冗余，导致报错&lt;/p&gt;
&lt;p&gt;updatexml()函数实际上是去更新了XML文档，但是我们在xml文档路径的位置里面写入了子查询，我们输入特殊字符，然后就因为不符合输入规则然后报错了，但是报错的时候它其实已经执行了那个子查询代码。&lt;/p&gt;
&lt;p&gt;extractvalue() :对XML文档进行查询的函数。
xml文档中查找字符位置是用/xxx/xxx/xxx/&amp;hellip;这种格式，如果写入其他格式就会报错,并且会返回写入的非法格式内容，错误信息如:XPATH syntax error:&amp;lsquo;xxxxxxxx&amp;rsquo;。&lt;/p&gt;
&lt;p&gt;注入接着问，盲注，怎么判断是不是盲注，我说了看回显可以类比成01的bool型还有无回显的时间盲注，接着又问了python脚本跑盲注，这个按自己情况说就可以了。&lt;/p&gt;
&lt;p&gt;接下来是文件上传，大体的上传思路（比如前端），还有对应的中间件解析漏洞，基本都在这两个博客里。
中间件解析漏洞https://www.cnblogs.com/1996-11-01-614lb/p/14237744.html
文件上传https://blog.csdn.net/ouyang_ly/article/details/120210422&lt;/p&gt;
&lt;p&gt;可能是按照我的简历问的，问了怎么加固系统，我说了下可以按照阿里云给的加固方案
&lt;a class=&#34;link&#34; href=&#34;https://www.alibabacloud.com/help/zh/doc-detail/49781.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.alibabacloud.com/help/zh/doc-detail/49781.html&lt;/a&gt;，分成linux和windows，并强调了我在面试前特地准备了一下这个，还没说就问下一条了。&lt;/p&gt;
&lt;p&gt;最后是应急响应怎么做，我的思路是应急响应-&amp;gt;加固-&amp;gt;溯源，先找到具体的那一台机器，然后既然报警那就说明知道了具体的漏洞类型，加相应的补丁打上，以linux为主（一般都会问linux的），查看/var/log/secure系统日志，查看登录失败的记录，还有Linux历史命令&amp;ndash;&amp;gt;home目录的bash_histor，查看执行过的命令。再利用webshell或者是shell查杀工具查杀，查看tmp目录下是非有带有免杀的木马。拿到攻击ip之后开始溯源。
到这里就停了，溯源他没问，面试结束。&lt;/p&gt;
&lt;p&gt;最后问了下我的年级，大二，夸了下年轻有为，我说不算不算，年级里还有比我厉害的。&lt;/p&gt;
&lt;p&gt;我最后也问候了下学长的健康（本来昨天定的面试，结果人家去医院了）&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
